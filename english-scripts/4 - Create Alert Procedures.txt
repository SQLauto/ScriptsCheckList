use DBAUtils
GO
/*******************************************************************************************************************************
--	ALERTA: PROCESSO BLOQUEADO
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Blocked_Process_Alert]
AS
BEGIN
	SET NOCOUNT ON

	-- Blocked Process
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Blocked Process')
	
	-- Declare Variables
	DECLARE	@Subject VARCHAR(500), @Type TINYINT, @Qty_Seconds INT, @Query VARCHAR(8000), @Importance AS VARCHAR(6), @Current_Date DATETIME,
			@EmailBody VARCHAR(MAX), @AlertLockHeader VARCHAR(MAX), @AlertLockTable VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@AlertLockRootHeader VARCHAR(MAX), @AlertLockRootTable VARCHAR(MAX), @Blocked_Process_Parameter INT, @Qty_Time_Root_Lock INT,
			@EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@Blocked_Process_Parameter = Parameter_Value,		-- Minutes,
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].Alert_Parameters
	WHERE Id_Alert_Parameter = @Id_Alert_Parameter			-- Processo Bloqueado

	-- Quantidade em Minutes
	SELECT	@Qty_Time_Root_Lock	= 1		-- Query que esta gerando o lock (rodando a mais de 1 minuto)

	--------------------------------------------------------------------------------------------------------------------------------
	--	Cria Tabela para armazenar os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
		
	CREATE TABLE #WhoIsActive_Result (		
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),		
		[sql_command]			XML		
	)   
      
	-- Seta a hora atual
	SELECT @Current_Date = GETDATE()

	--------------------------------------------------------------------------------------------------------------------------------
	--	Carrega os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Retorna todos os processos que estão sendo executados no momento
	EXEC [dbo].[sp_whoisactive]
			@get_outer_command =	1,
			@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
			@destination_table =	'#WhoIsActive_Result'
				    
	-- Altera a coluna que possui o comando SQL
	ALTER TABLE #WhoIsActive_Result
	ALTER COLUMN [sql_command] VARCHAR(MAX)
	
	UPDATE #WhoIsActive_Result
	SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
	
	-- select * from #WhoIsActive_Result
	
	-- Verifica se não existe nenhum processo em Execução
	IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
	BEGIN
		INSERT INTO #WhoIsActive_Result
		SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
	END

	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA
	SELECT @Type = [type]
	FROM [dbo].Alerts
	WHERE Id = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )
	
	/*******************************************************************************************************************************
	--	Verifica se existe algum Processo Bloqueado
	*******************************************************************************************************************************/	
	IF EXISTS	(
					SELECT NULL 
					FROM #WhoIsActive_Result A
					JOIN #WhoIsActive_Result B ON A.[blocking_session_id] = B.[session_id]
					WHERE	DATEDIFF(SECOND,A.[start_time], @Current_Date) > @Blocked_Process_Parameter * 60		-- A query que está sendo bloqueada está rodando a mais 2 Minutes
							AND DATEDIFF(SECOND,B.[start_time], @Current_Date) > @Qty_Time_Root_Lock * 60			-- A query que está bloqueando está rodando a mais de 1 minuto
				)
	BEGIN	-- INICIO - ALERTA
		IF ISNULL(@Type, 0) = 0	-- Envia o Alerta apenas uma vez
		BEGIN
			--------------------------------------------------------------------------------------------------------------------------------
			--	Verifica a quantidade de processos bloqueados
			--------------------------------------------------------------------------------------------------------------------------------
			-- Declara a variavel e retorna a quantidade de Queries Lentas
			DECLARE @QtyBlockedProcesses INT = (
										SELECT COUNT(*)
										FROM #WhoIsActive_Result A
										JOIN #WhoIsActive_Result B ON A.[blocking_session_id] = B.[session_id]
										WHERE	DATEDIFF(SECOND,A.[start_time], @Current_Date) > @Blocked_Process_Parameter	* 60
												AND DATEDIFF(SECOND,B.[start_time], @Current_Date) > @Qty_Time_Root_Lock * 60
									)

			DECLARE @QtyBlockedProcessesLocks INT = (
										SELECT COUNT(*)
										FROM #WhoIsActive_Result A
										WHERE [blocking_session_id] IS NOT NULL
									)

			--------------------------------------------------------------------------------------------------------------------------------
			--	Verifica o Nivel dos Locks
			--------------------------------------------------------------------------------------------------------------------------------
			ALTER TABLE #WhoIsActive_Result
			ADD Lock_Level TINYINT 

			-- Nivel 0
			UPDATE A
			SET Lock_Level = 0
			FROM #WhoIsActive_Result A
			WHERE blocking_session_id IS NULL AND session_id IN ( SELECT DISTINCT blocking_session_id 
						FROM #WhoIsActive_Result WHERE blocking_session_id IS NOT NULL)

			UPDATE A
			SET Lock_Level = 1
			FROM #WhoIsActive_Result A
			WHERE	Lock_Level IS NULL
					AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 0)

			UPDATE A
			SET Lock_Level = 2
			FROM #WhoIsActive_Result A
			WHERE	Lock_Level IS NULL
					AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 1)

			UPDATE A
			SET Lock_Level = 3
			FROM #WhoIsActive_Result A
			WHERE	Lock_Level IS NULL
					AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 2)

			-- Tratamento quando não tem um Lock Raiz
			IF NOT EXISTS(select * from #WhoIsActive_Result where Lock_Level IS NOT NULL)
			BEGIN
				UPDATE A
				SET Lock_Level = 0
				FROM #WhoIsActive_Result A
				WHERE session_id IN ( SELECT DISTINCT blocking_session_id 
					FROM #WhoIsActive_Result WHERE blocking_session_id IS NOT NULL)
          
				UPDATE A
				SET Lock_Level = 1
				FROM #WhoIsActive_Result A
				WHERE	Lock_Level IS NULL
						AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 0)

				UPDATE A
				SET Lock_Level = 2
				FROM #WhoIsActive_Result A
				WHERE	Nr_Nivel_Lock IS NULL
						AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 1)

				UPDATE A
				SET Lock_Level = 3
				FROM #WhoIsActive_Result A
				WHERE	Lock_Level IS NULL
						AND blocking_session_id IN ( SELECT DISTINCT session_id FROM #WhoIsActive_Result WHERE Lock_Level = 2)
			END

			/*******************************************************************************************************************************
			--	CRIA O EMAIL - ALERTA
			*******************************************************************************************************************************/							
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER - RAIZ LOCK
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockRootHeader = '<font color=black bold=true size=5>'			            
			SET @AlertLockRootHeader = @AlertLockRootHeader + '<BR /> TOP 50 - Root Lock Process <BR />'
			SET @AlertLockRootHeader = @AlertLockRootHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY - RAIZ LOCK
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockRootTable = CAST( (
				SELECT td =				Lock_Level			+ '</td>'
							+ '<td>' +	D.Duration				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								CAST(Lock_Level AS VARCHAR)							AS Lock_Level,
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						WHERE Lock_Level IS NOT NULL
						ORDER BY Lock_Level, [start_time] 
				
					  ) AS D ORDER BY Lock_Level, [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertLockRootTable = REPLACE( REPLACE( REPLACE( @AlertLockRootTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertLockRootTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="80"><font color=white>Lock Level</font></th>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transactions</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertLockRootTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			
						
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockHeader = '<font color=black bold=true size=5>'			            
			SET @AlertLockHeader = @AlertLockHeader + '<BR /> TOP 50 - Processes being executed in the instance<BR />'
			SET @AlertLockHeader = @AlertLockHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						ORDER BY [start_time]

					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertLockTable = REPLACE( REPLACE( REPLACE( @AlertLockTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertLockTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocked ID Session</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transactions</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertLockTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			              
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/			              
			SELECT	@Importance =	'High',
					@Subject =		'ALERT: There are ' + CAST(@QtyBlockedProcesses AS VARCHAR) + 
									' processes blocked for more than ' +  CAST((@Blocked_Process_Parameter) AS VARCHAR) + ' minute(s)' +
									' and a total of ' + CAST(@QtyBlockedProcessesLocks AS VARCHAR) +  ' Lock(s) in the server: ' + @@SERVERNAME,
					@EmailBody =	@AlertLockHeader + @EmptyBodyEmail + @AlertLockRootTable + @EmptyBodyEmail
									+ @AlertLockHeader + @EmptyBodyEmail + @AlertLockRootTable + @EmptyBodyEmail
				
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
				
			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - ALERTA
			*******************************************************************************************************************************/	
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
					
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
			*******************************************************************************************************************************/
			INSERT INTO [dbo].Alerts ( Id_Alert_Parameter, Alert_Message, [type] )
			SELECT @Id_Alert_Parameter, @Subject, 1			
		END
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR				
		IF @Type = 1
		BEGIN
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR
			*******************************************************************************************************************************/

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockHeader = '<font color=black bold=true size=5>'			            
			SET @AlertLockHeader = @AlertLockHeader + '<BR /> Processes being executed in the instance <BR />' 
			SET @AlertLockHeader = @AlertLockHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLockTable = CAST( (
				SELECT td =				Duration				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS Duration, 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
				
					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertLockTable = REPLACE( REPLACE( REPLACE( @AlertLockTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertLockTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking session id</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertLockTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			              			
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: There are no more blocked processes for more than ' + 
									CAST((@Blocked_Process_Parameter) AS VARCHAR) + ' minute(s) in the server: ' + @@SERVERNAME,
					@EmailBody =	@AlertLockHeader + @EmptyBodyEmail + @AlertLockTable + @EmptyBodyEmail
				
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
			
			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance

			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
			*******************************************************************************************************************************/
			INSERT INTO [dbo].Alerts ( Id_Alert_Parameter, Alert_Message, [type] )
			SELECT @Id_Alert_Parameter, @Subject, 0		
		END		
	END		-- FIM - CLEAR
END





GO
/****** Object:  StoredProcedure [dbo].[usp_checkdb_alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: BANCO DE DADOS CORROMPIDO
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_checkdb_alert]
AS
BEGIN
	SET NOCOUNT ON

	SET DATEFORMAT MDY

	IF ( OBJECT_ID('tempdb..#TempLog') IS NOT NULL ) 
		DROP TABLE #TempLog
	
	CREATE TABLE #TempLog (
		[LogDate]		DATETIME,
		[ProcessInfo]	NVARCHAR(50),
		[Text]			NVARCHAR(MAX)
	)

	IF ( OBJECT_ID('tempdb..#logF') IS NOT NULL ) 
		DROP TABLE #logF
	
	CREATE TABLE #logF (
		ArchiveNumber     INT,
		LogDate           DATETIME,
		LogSize           INT 
	)

	-- Seleciona o número de arquivos.
	INSERT INTO #logF  
	EXEC sp_enumerrorlogs
	
	DELETE FROM #logF
	WHERE LogDate < GETDATE()-2

	DECLARE @TSQL NVARCHAR(2000), @lC INT	

	SELECT @lC = MIN(ArchiveNumber) FROM #logF

	--Loop para realizar a leitura de todo o log
	WHILE @lC IS NOT NULL
	BEGIN
		  INSERT INTO #TempLog
		  EXEC sp_readerrorlog @lC
		  
		  SELECT @lC = MIN(ArchiveNumber) 
		  FROM #logF
		  WHERE ArchiveNumber > @lC
	END

	IF OBJECT_ID('_Corruption_Result') IS NOT NULL
		DROP TABLE _Corruption_Result
		
	SELECT	LogDate,
			SUBSTRING(Text, 15, CHARINDEX(')', Text, 15) - 15) AS [Database_Name],
			SUBSTRING(Text,charindex('found',Text),(charindex('Elapsed time',Text)-charindex('found',Text))) AS Errors,   
			Text 
	INTO _Corruption_Result
	FROM #TempLog
	WHERE LogDate >= GETDATE() - 1	 
		and Text like '%DBCC CHECKDB (%'
		and Text not like '%IDR%'
		and substring(Text,charindex('found',Text), charindex('Elapsed time',Text) - charindex('found',Text)) <> 'found 0 errors and repaired 0 errors.'

	-- Declara as variaveis
	DECLARE @Subject VARCHAR(500), @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@AlertCorruptedDatabaseHeader VARCHAR(MAX), @AlertCorruptedDatabaseTable VARCHAR(MAX), @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	-- Banco de Dados Corrompido
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Corrupted Database')

	SELECT	@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Banco de Dados Corrompido

	/*******************************************************************************************************************************
	-- Verifica se existe algum Banco de Dados Corrompido
	*******************************************************************************************************************************/
	IF EXISTS (SELECT NULL FROM [dbo].[_Corruption_Result]) 
	BEGIN	-- INICIO - ALERTA
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/			

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertCorruptedDatabaseHeader = '<font color=black bold=true size=5>'			            
		SET @AlertCorruptedDatabaseHeader = @AlertCorruptedDatabaseHeader + '<BR /> Corrupted Database <BR />' 
		SET @AlertCorruptedDatabaseHeader = @AlertCorruptedDatabaseHeader + '</font>'

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertCorruptedDatabaseTable = CAST( (    
			SELECT td =				[LogDate]		+ '</td>'
						+ '<td>' +	[Database_Name]	+ '</td>'
						+ '<td>' +	[Errors]			+ '</td>'
						+ '<td>' +	[Text]			+ '</td>'

			FROM (
					-- Dados da Tabela do EMAIL
					SELECT	CONVERT(VARCHAR(20), [LogDate], 120) AS [LogDate],
							[Database_Name],
							[Errors],
							[Text]
					FROM [dbo].[_Corruption_Result]
					
			) AS D
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
		)   
			      
		-- Corrige a Formatação da Tabela
		SET @AlertCorruptedDatabaseTable = REPLACE( REPLACE( REPLACE( @AlertCorruptedDatabaseTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			    
		-- Títulos da Tabela do EMAIL
		SET @AlertCorruptedDatabaseTable = 
				'<table cellspacing="2" cellpadding="5" border="3">'
				+	'<tr>
						<th bgcolor=#0B0B61 width="100"><font color=white>Log Date</font></th>
						<th bgcolor=#0B0B61 width="180"><font color=white>Database Name</font></th>
						<th bgcolor=#0B0B61 width="200"><font color=white>Errors</font></th>
						<th bgcolor=#0B0B61 width="300"><font color=white>Description</font></th>
					</tr>'    
				+ REPLACE( REPLACE( @AlertCorruptedDatabaseTable, '&lt;', '<'), '&gt;', '>')
				+ '</table>' 
			
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'

		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: There are corrupted databases in the server: ' + @@SERVERNAME,
				@EmailBody =	@AlertCorruptedDatabaseHeader + @EmptyBodyEmail + @AlertCorruptedDatabaseTable + @EmptyBodyEmail
			
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1		
	END		-- FIM - ALERTA
				
	IF ( OBJECT_ID('_Corruption_Result') IS NOT NULL )
		DROP TABLE _Corruption_Result
END

GO
/****** Object:  StoredProcedure [dbo].[usp_checkdb_databases]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*******************************************************************************************************************************
--	ALERTA: CHECKDB DATABASES
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_checkdb_databases]
AS
BEGIN
	SET NOCOUNT ON
	
	-- Declara a tabela que irá armazenar o nome das Databases
	DECLARE @Databases TABLE ( 
		[Id_Database] INT IDENTITY(1, 1), 
		[Database Name] VARCHAR(50)
	)

	-- Declara as variaveis
	DECLARE @Total INT, @Loop INT, @Database_Name VARCHAR(50)
	
	-- Busca o nome das Databases
	INSERT INTO @Databases( [Database Name] )
	SELECT [name]
	FROM [master].[sys].[databases]
	WHERE	[name] NOT IN ('tempdb')  -- Colocar o nome da Database aqui, caso deseje desconsiderar alguma
			AND [state_desc] = 'ONLINE'

	-- Quantidade Total de Databases (utilizado no Loop abaixo)
	SELECT @Total = MAX([Id_Database])
	FROM @Databases

	SET @Loop = 1

	-- Realiza o CHECKDB para cada Database
	WHILE ( @Loop <= @Total )
	BEGIN
		SELECT @Database_Name = [Database Name]
		FROM @Databases
		WHERE [Id_Database] = @Loop

		DBCC CHECKDB(@Database_Name) WITH NO_INFOMSGS 
		SET @Loop = @Loop + 1
	END
END

GO
/****** Object:  StoredProcedure [dbo].[usp_CPU_Usage]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: CONSUMO CPU
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_CPU_Usage]
AS
BEGIN
	SET NOCOUNT ON

	-- Consumo CPU
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'CPU Usage')

	-- Declara as variaveis
	DECLARE	@Subject VARCHAR(500), @Type TINYINT, @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @CPU_Parameter INT,
			@AlertCPUAgarradosHeader VARCHAR(MAX), @AlertaCPUAgarradosTable VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@WhoisactiveResultHeader VARCHAR(MAX), @WhoisactiveResultTable VARCHAR(MAX), @EmailDestination VARCHAR(500),
			@ProfileEmail VARCHAR(200)

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@CPU_Parameter = Parameter_Value,					-- Percentual
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].Alert_Parameters
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Consumo CPU

	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA
	SELECT @Type = [Type]
	FROM [dbo].[Alerts]
	WHERE [Id] = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )
	
	--------------------------------------------------------------------------------------------------------------------------------
	--	Cria Tabela para armazenar os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
		
	CREATE TABLE #WhoIsActive_Result (		
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),
		[sql_command]			XML
	)

	--------------------------------------------------------------------------------------------------------------------------------
	-- Verifica a utilização da CPU
	--------------------------------------------------------------------------------------------------------------------------------	
	IF ( OBJECT_ID('tempdb..#CPU_Utilization') IS NOT NULL )
		DROP TABLE #CPU_Utilization
	
	SELECT TOP(2)
		record_id,
		[SQLProcessUtilization],
		100 - SystemIdle - SQLProcessUtilization as OtherProcessUtilization,
		[SystemIdle],
		100 - SystemIdle AS CPU_Utilization
	INTO #CPU_Utilization
	FROM	( 
				SELECT	record.value('(./Record/@id)[1]', 'int')													AS [record_id], 
						record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int')			AS [SystemIdle],
						record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int')	AS [SQLProcessUtilization], 
						[timestamp] 
				FROM ( 
						SELECT [timestamp], CONVERT(XML, [record]) AS [record] 
						FROM [sys].[dm_os_ring_buffers] 
						WHERE	[ring_buffer_type] = N'RING_BUFFER_SCHEDULER_MONITOR' 
								AND [record] LIKE '%<SystemHealth>%'
					) AS X					   
			) AS Y
	ORDER BY record_id DESC

	/*******************************************************************************************************************************
	--	Verifica se o Consumo de CPU está maior do que o parametro
	*******************************************************************************************************************************/
	IF (
			select CPU_Utilization from #CPU_Utilization
			where record_id = (select max(record_id) from #CPU_Utilization)
		) > @CPU_Parameter
	BEGIN	-- INICIO - ALERTA	
		IF (
			select CPU_Utilization from #CPU_Utilization
			where record_id = (select min(record_id) from #CPU_Utilization)
		) > @CPU_Parameter
		BEGIN
			IF ISNULL(@Type, 0) = 0	-- Envia o Alerta apenas uma vez
			BEGIN
				--------------------------------------------------------------------------------------------------------------------------------
				--	ALERTA - DADOS - WHOISACTIVE
				--------------------------------------------------------------------------------------------------------------------------------
				-- Retorna todos os processos que estão sendo executados no momento
				EXEC [dbo].[sp_whoisactive]
						@get_outer_command =	1,
						@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
						@destination_table =	'#WhoIsActive_Result'
						    
				-- Altera a coluna que possui o comando SQL
				ALTER TABLE #WhoIsActive_Result
				ALTER COLUMN [sql_command] VARCHAR(MAX)
			
				UPDATE #WhoIsActive_Result
				SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
			
				-- select * from #WhoIsActive_Result
			
				-- Verifica se não existe nenhum processo em Execução
				IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
				BEGIN
					INSERT INTO #WhoIsActive_Result
					SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
				END
		
				/*******************************************************************************************************************************
				--	CRIA O EMAIL - ALERTA
				*******************************************************************************************************************************/

				--------------------------------------------------------------------------------------------------------------------------------
				--	ALERTA - HEADER
				--------------------------------------------------------------------------------------------------------------------------------
				SET @AlertCPUAgarradosHeader = '<font color=black bold=true size=5>'			            
				SET @AlertCPUAgarradosHeader = @AlertCPUAgarradosHeader + '<BR /> CPU Usage in the server <BR />' 
				SET @AlertCPUAgarradosHeader = @AlertCPUAgarradosHeader + '</font>'

				--------------------------------------------------------------------------------------------------------------------------------
				--	ALERTA - BODY
				--------------------------------------------------------------------------------------------------------------------------------
				SET @AlertaCPUAgarradosTable = CAST( (    
					SELECT td =			[SQLProcessUtilization]	+ '</td>'
							+ '<td>' +	OtherProcessUtilization	+ '</td>'
							+ '<td>' +	[SystemIdle]			+ '</td>'
							+ '<td>' +	CPU_Utilization			+ '</td>'				 

					FROM (  
							-- Dados da Tabela do EMAIL	
							select	TOP 1
									CAST([SQLProcessUtilization] AS VARCHAR) [SQLProcessUtilization],
									CAST((100 - SystemIdle - SQLProcessUtilization) AS VARCHAR) as OtherProcessUtilization,
									CAST([SystemIdle] AS VARCHAR) AS [SystemIdle],
									CAST(100 - SystemIdle AS VARCHAR) AS CPU_Utilization
							from #CPU_Utilization
							order by record_id DESC
						
						  ) AS D 
					FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
				)  
			      
				-- Corrige a Formatação da Tabela
				SET @AlertaCPUAgarradosTable = REPLACE( REPLACE( REPLACE( @AlertaCPUAgarradosTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
				-- Títulos da Tabela do EMAIL
				SET @AlertaCPUAgarradosTable = 
						'<table cellspacing="2" cellpadding="5" border="3">'    
						+	'<tr>
								<th bgcolor=#0B0B61 width="200"><font color=white>SQL Server (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Other Processes (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Free (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Total Usage (%)</font></th>
							</tr>'    
						+ REPLACE( REPLACE( @AlertaCPUAgarradosTable, '&lt;', '<'), '&gt;', '>')   
						+ '</table>'
					
				--------------------------------------------------------------------------------------------------------------------------------
				--	ALERTA - HEADER - WHOISACTIVE
				--------------------------------------------------------------------------------------------------------------------------------
				SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
				SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instance <BR />'
				SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

				--------------------------------------------------------------------------------------------------------------------------------
				--	ALERTA - BODY - WHOISACTIVE
				--------------------------------------------------------------------------------------------------------------------------------
				SET @WhoisactiveResultTable = CAST( (
					SELECT td =				[Duration]				+ '</td>'
								+ '<td>' +  [database_name]			+ '</td>'
								+ '<td>' +  [login_name]			+ '</td>'
								+ '<td>' +  [host_name]				+ '</td>'
								+ '<td>' +  [start_time]			+ '</td>'
								+ '<td>' +  [status]				+ '</td>'
								+ '<td>' +  [session_id]			+ '</td>'
								+ '<td>' +  [blocking_session_id]	+ '</td>'
								+ '<td>' +  [Wait]					+ '</td>'
								+ '<td>' +  [open_tran_count]		+ '</td>'
								+ '<td>' +  [CPU]					+ '</td>'
								+ '<td>' +  [reads]					+ '</td>'
								+ '<td>' +  [writes]				+ '</td>'
								+ '<td>' +  [sql_command]			+ '</td>'

					FROM (  
							-- Dados da Tabela do EMAIL
							SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
									ISNULL([database_name], '-')							AS [database_name],
									ISNULL([login_name], '-')								AS [login_name],
									ISNULL([host_name], '-')								AS [host_name],
									ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
									ISNULL([status], '-')									AS [status],
									ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
									ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
									ISNULL([wait_info], '-')								AS [Wait],
									ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
									ISNULL([CPU], '-')										AS [CPU],
									ISNULL([reads], '-')									AS [reads],
									ISNULL([writes], '-')									AS [writes],
									ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
							FROM #WhoIsActive_Result
				
						  ) AS D ORDER BY [start_time] 
					FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
				) 
			      
				-- Corrige a Formatação da Tabela
				SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
				-- Títulos da Tabela do EMAIL
				SET @WhoisactiveResultTable = 
						'<table cellspacing="2" cellpadding="5" border="3">'    
						+	'<tr>
								<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
								<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
								<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
								<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
								<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
								<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
								<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
							</tr>'    
						+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
						+ '</table>'
			 
				--------------------------------------------------------------------------------------------------------------------------------
				-- Insere um Espaço em Branco no EMAIL
				--------------------------------------------------------------------------------------------------------------------------------
				SET @EmptyBodyEmail =	''
				SET @EmptyBodyEmail =
						'<table cellpadding="5" cellspacing="5" border="0">' +
							'<tr>
								<th width="500">               </th>
							</tr>'
							+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
						+ '</table>'

				/*******************************************************************************************************************************
				--	Seta as Variáveis do EMAIL
				*******************************************************************************************************************************/			              
				SELECT	@Importance =	'High',
						@Subject =		'ALERT: The CPU Usage is above of ' +  CAST((@CPU_Parameter) AS VARCHAR) + '% in the Server: ' + @@SERVERNAME,
						@EmailBody =	@AlertCPUAgarradosHeader + @EmptyBodyEmail + @AlertaCPUAgarradosTable + @EmptyBodyEmail +
										@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail
			
				/*******************************************************************************************************************************
				-- Inclui uma imagem com link para o site do Fabricio Lima
				*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'

				/*******************************************************************************************************************************
				--	ENVIA O EMAIL - ALERTA
				*******************************************************************************************************************************/	
				EXEC [msdb].[dbo].[sp_send_dbmail]
						@profile_name = @ProfileEmail,
						@recipients =	@EmailDestination,
						@subject =		@Subject,
						@body =			@EmailBody,
						@body_format =	'HTML',
						@importance =	@Importance
					
				/*******************************************************************************************************************************
				-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
				*******************************************************************************************************************************/
				INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], Alert_Message, [Type] )
				SELECT @Id_Alert_Parameter, @Subject, 1			
			END
		END
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR		
		IF @Type = 1
		BEGIN
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - DADOS - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			-- Retorna todos os processos que estão sendo executados no momento
			EXEC [dbo].[sp_whoisactive]
					@get_outer_command =	1,
					@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
					@destination_table =	'#WhoIsActive_Result'
						    
			-- Altera a coluna que possui o comando SQL
			ALTER TABLE #WhoIsActive_Result
			ALTER COLUMN [sql_command] VARCHAR(MAX)
			
			UPDATE #WhoIsActive_Result
			SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
			
			-- select * from #WhoIsActive_Result
			
			-- Verifica se não existe nenhum processo em Execução
			IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
			BEGIN
				INSERT INTO #WhoIsActive_Result
				SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
			END
		
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR
			*******************************************************************************************************************************/

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertCPUAgarradosHeader = '<font color=black bold=true size=5>'			            
			SET @AlertCPUAgarradosHeader = @AlertCPUAgarradosHeader + '<BR /> CPU Usage in the server <BR />' 
			SET @AlertCPUAgarradosHeader = @AlertCPUAgarradosHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			-------------------------------------------------------------------------------------------------------------------------------- 
			SET @AlertaCPUAgarradosTable = CAST( (    
					SELECT td =			[SQLProcessUtilization]	+ '</td>'
							+ '<td>' +	OtherProcessUtilization	+ '</td>'
							+ '<td>' +	[SystemIdle]			+ '</td>'
							+ '<td>' +	CPU_Utilization			+ '</td>'				 

					FROM (  
							-- Dados da Tabela do EMAIL	
							select	TOP 1
									CAST([SQLProcessUtilization] AS VARCHAR) [SQLProcessUtilization],
									CAST((100 - SystemIdle - SQLProcessUtilization) AS VARCHAR) as OtherProcessUtilization,
									CAST([SystemIdle] AS VARCHAR) AS [SystemIdle],
									CAST(100 - SystemIdle AS VARCHAR) AS CPU_Utilization
							from #CPU_Utilization
							order by record_id DESC
						
						  ) AS D 
					FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
				)
			      
			-- Corrige a Formatação da Tabela
			SET @AlertaCPUAgarradosTable = REPLACE( REPLACE( REPLACE( @AlertaCPUAgarradosTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			    
			-- Títulos da Tabela do EMAIL
			SET @AlertaCPUAgarradosTable = 
						'<table cellspacing="2" cellpadding="5" border="3">'    
						+	'<tr>
								<th bgcolor=#0B0B61 width="200"><font color=white>SQL Server (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Other Processes (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Free (%)</font></th>
								<th bgcolor=#0B0B61 width="200"><font color=white>Total Usage (%)</font></th>
							</tr>'    
						+ REPLACE( REPLACE( @AlertaCPUAgarradosTable, '&lt;', '<'), '&gt;', '>')   
						+ '</table>'
					
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instace <BR />'
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
				
					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			) 
			      
			-- Corrige a Formatação da Tabela
			SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @WhoisactiveResultTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			 
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: The CPU Usage is under of ' +  CAST((@CPU_Parameter) AS VARCHAR) + '% in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertCPUAgarradosHeader + @EmptyBodyEmail + @AlertaCPUAgarradosTable + @EmptyBodyEmail +
									@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail
			
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'

			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
			
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 0		
		END
	END		-- FIM - CLEAR
END

GO
/****** Object:  StoredProcedure [dbo].[usp_Create_Trace]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_Create_Trace]
AS
BEGIN
    -- Trace Queries Demoradas
    DECLARE @Id_Alert_Parameter INT = (
                                           SELECT Id_Alert_Parameter
                                           FROM [DBAUtils].[dbo].Alert_Parameters (NOLOCK)
                                           WHERE Alert_Name = 'Slow Queries Trace');

    --------------------------------------------------------------------------------------------------------------------------------
    -- Retrieve the parameters for the alert
    --------------------------------------------------------------------------------------------------------------------------------
    DECLARE @Trace_Time INT;

    SELECT @Trace_Time = Parameter_Value -- Seconds
    FROM [dbo].Alert_Parameters
    WHERE Id_Alert_Parameter = @Id_Alert_Parameter; -- Slow Queries trace

    -- Security Check for placing a default value in the variable
    IF (@Trace_Time IS NULL OR @Trace_Time < 0)
    BEGIN
        SELECT @Trace_Time = 3; -- Seconds
    END;

    /*******************************************************************************************************************************
	-- Created by: SQL Server Profiler 2005
	-- Date: 09/09/2008  14:44:14
	*******************************************************************************************************************************/
    -- Create a Queue.
    DECLARE @rc INT;
    DECLARE @TraceID INT;
    DECLARE @maxfilesize BIGINT;
    SET @maxfilesize = 50; -- You can set the File Size depending on your environment.

    /*******************************************************************************************************************************
	-- ATENTION!!!
	-- Change this path to the desired one!!!
	*******************************************************************************************************************************/
    EXEC @rc = sp_trace_create @TraceID OUTPUT,
                               0,
                               N'F:\Trace\Slow_Queries',
                               @maxfilesize,
                               NULL;

    IF (@rc != 0)
        GOTO error;

    -- Client side File and Table cannot be scripted.

    -- Set the events.
    DECLARE @on BIT;
    SET @on = 1;

    -- 10 RPC:Completed Ocorre quando uma RPC (chamada de procedimento remoto) é concluída. 
    EXEC sp_trace_setevent @TraceID, 10, 1, @on; -- TextData: Valor de texto dependente da classe de evento capturada no rastreamento.
    EXEC sp_trace_setevent @TraceID, 10, 6, @on; -- NTUserName: Nome de usuário do Microsoft Windows. 
    EXEC sp_trace_setevent @TraceID, 10, 8, @on; -- HostName: Nome do computador cliente que originou a solicitação. 
    EXEC sp_trace_setevent @TraceID, 10, 10, @on; -- ApplicationName: Nome do aplicativo cliente que criou a conexão com uma instância do SQL Server.
    -- Essa coluna é populada com os valores passados pelo aplicativo e não com o nome exibido do programa.
    EXEC sp_trace_setevent @TraceID, 10, 11, @on; -- LoginName: Nome de logon do cliente no SQL Server.
    EXEC sp_trace_setevent @TraceID, 10, 12, @on; -- SPID: ID de processo de servidor atribuída pelo SQL Server ao processo associado ao cliente.
    EXEC sp_trace_setevent @TraceID, 10, 13, @on; -- Duration: Tempo decorrido (em milhões de segundos) utilizado pelo evento. 
    -- Esta coluna de dados não é populada pelo evento Hash Warning.
    EXEC sp_trace_setevent @TraceID, 10, 14, @on; -- StartTime: Horário de início do evento, quando disponível.
    EXEC sp_trace_setevent @TraceID, 10, 15, @on; -- EndTime: Horário em que o evento foi encerrado. Esta coluna não é populada para classes de evento
    -- iniciais, como SQL:BatchStarting ou SP:Starting. Também não é populada pelo evento Hash Warning.
    EXEC sp_trace_setevent @TraceID, 10, 16, @on; -- Reads: Número de leituras lógicas do disco executadas pelo servidor em nome do evento. 
    -- Esta coluna não é populada pelo evento Lock:Released.
    EXEC sp_trace_setevent @TraceID, 10, 17, @on; -- Writes: Número de gravações no disco físico executadas pelo servidor em nome do evento.
    EXEC sp_trace_setevent @TraceID, 10, 18, @on; -- CPU: Tempo da CPU (em milissegundos) usado pelo evento.
    EXEC sp_trace_setevent @TraceID, 10, 19, @on; -- CPU: Tempo da CPU (em milissegundos) usado pelo evento.
    EXEC sp_trace_setevent @TraceID, 10, 26, @on; -- ServerName: Nome da instância do SQL Server, servername ou servername\instancename, 
    -- que está sendo rastreada
    EXEC sp_trace_setevent @TraceID, 10, 35, @on; -- DatabaseName: Nome do banco de dados especificado na instrução USE banco de dados.
    EXEC sp_trace_setevent @TraceID, 10, 40, @on; -- DBUserName: Nome de usuário do banco de dados do SQL Server do cliente.
    EXEC sp_trace_setevent @TraceID, 10, 48, @on; -- RowCounts: Número de linhas no lote.
    EXEC sp_trace_setevent @TraceID, 10, 64, @on; -- SessionLoginName: O nome de logon do usuário que originou a sessão. Por exemplo, se você 
    -- se conectar ao SQL Server usando Login1 e executar uma instrução como Login2, SessionLoginName
    -- irá exibir Login1, enquanto que LoginName exibirá Login2. Esta coluna de dados exibe logons
    -- tanto do SQL Server, quanto do Windows.

    EXEC sp_trace_setevent @TraceID, 12, 1, @on; -- TextData: Valor de texto dependente da classe de evento capturada no rastreamento.
    EXEC sp_trace_setevent @TraceID, 12, 6, @on; -- NTUserName: Nome de usuário do Microsoft Windows. 
    EXEC sp_trace_setevent @TraceID, 12, 8, @on; -- HostName: Nome do computador cliente que originou a solicitação. 
    EXEC sp_trace_setevent @TraceID, 12, 10, @on; -- ApplicationName: Nome do aplicativo cliente que criou a conexão com uma instância do SQL Server. 
    -- Essa coluna é populada com os valores passados pelo aplicativo e não com o nome exibido do programa.
    EXEC sp_trace_setevent @TraceID, 12, 11, @on; -- LoginName: Nome de logon do cliente no SQL Server.
    EXEC sp_trace_setevent @TraceID, 12, 12, @on; -- SPID: ID de processo de servidor atribuída pelo SQL Server ao processo associado ao cliente.
    EXEC sp_trace_setevent @TraceID, 12, 13, @on; -- Duration: Tempo decorrido (em milhões de segundos) utilizado pelo evento. Esta coluna de dados não
    -- é populada pelo evento Hash Warning.
    EXEC sp_trace_setevent @TraceID, 12, 14, @on; -- StartTime: Horário de início do evento, quando disponível.
    EXEC sp_trace_setevent @TraceID, 12, 15, @on; -- EndTime: Horário em que o evento foi encerrado. Esta coluna não é populada para classes de evento
    -- iniciais, como SQL:BatchStarting ou SP:Starting. Também não é populada pelo evento Hash Warning.
    EXEC sp_trace_setevent @TraceID, 12, 16, @on; -- Reads: Número de leituras lógicas do disco executadas pelo servidor em nome do evento. 
    -- Esta coluna não é populada pelo evento Lock:Released.
    EXEC sp_trace_setevent @TraceID, 12, 17, @on; -- Writes: Número de gravações no disco físico executadas pelo servidor em nome do evento.
    EXEC sp_trace_setevent @TraceID, 12, 18, @on; -- CPU: CPU time (in miliseconds) used by the event.
    EXEC sp_trace_setevent @TraceID, 12, 26, @on; -- ServerName: Nome da instância do SQL Server, servername ou servername\instancename, 
    -- que está sendo rastreada
    EXEC sp_trace_setevent @TraceID, 12, 35, @on; -- DatabaseName: Nome do banco de dados especificado na instrução USE banco de dados.
    EXEC sp_trace_setevent @TraceID, 12, 40, @on; -- DBUserName: Nome de usuário do banco de dados do SQL Server do cliente.
    EXEC sp_trace_setevent @TraceID, 12, 48, @on; -- RowCounts: Número de linhas no lote.
    EXEC sp_trace_setevent @TraceID, 12, 64, @on; -- SessionLoginName: O nome de logon do usuário que originou a sessão. Por exemplo, se você se
    -- conectar ao SQL Server usando Login1 e executar uma instrução como Login2, SessionLoginName
    -- irá exibir Login1, enquanto que LoginName exibirá Login2. Esta coluna de dados exibe logons
    -- tanto do SQL Server, quanto do Windows.

    -- Set the Filters.
    DECLARE @intfilter INT;
    DECLARE @bigintfilter BIGINT;

    EXEC sp_trace_setfilter @TraceID,
                            10,
                            0,
                            7,
                            N'SQL Server Profiler - 4d8f4bca-f08c-4755-b90c-6ec17a6f1275';
    EXEC sp_trace_setfilter @TraceID, 10, 0, 7, N'DatabaseMail90%';

    /*******************************************************************************************************************************
	-- Configura o tempo mínimo para as queries demoradas (em segundos)
	*******************************************************************************************************************************/
    SET @bigintfilter = 1000000 * @Trace_Time; --  @Trace_Time (in seconds)

    EXEC sp_trace_setfilter @TraceID, 13, 0, 4, @bigintfilter;

    SET @bigintfilter = NULL;
    EXEC sp_trace_setfilter @TraceID, 13, 0, 1, @bigintfilter;

    EXEC sp_trace_setfilter @TraceID, 1, 0, 7, N'NO STATS%';

    EXEC sp_trace_setfilter @TraceID, 1, 0, 7, N'NULL%';

    -- Set the trace status to start.
    EXEC sp_trace_setstatus @TraceID, 1;

    -- Display trace id for future references.
    SELECT TraceID = @TraceID;

    GOTO finish;

    error:
    SELECT ErrorCode = @rc;

    finish:
END;

GO
/****** Object:  StoredProcedure [dbo].[usp_Created_Database_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: Database Criada
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Created_Database_Alert]
AS
BEGIN
	SET NOCOUNT ON

	-- Database Criada
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Created Database')

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	DECLARE @Created_Database_Parameter INT, @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	SELECT	@Created_Database_Parameter = Parameter_Value,		-- Hours
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Database Criada

	-- Verifica se alguma base foi criada no dia anterior
	IF ( OBJECT_ID('tempdb..#Alert_Database_Created') IS NOT NULL ) 
		DROP TABLE #Alert_Database_Created
	
	SELECT [name], [recovery_model_desc], [create_date]
	INTO #Alert_Database_Created
	FROM [sys].[databases] WITH(NOLOCK)
	WHERE	[database_id] <> 2 -- Desconsidera a Database "TempDb"
			AND [create_date] >= DATEADD(HOUR, -@Created_Database_Parameter, GETDATE())
	
	/*******************************************************************************************************************************
	--	Verifica se alguam base foi criada
	*******************************************************************************************************************************/
	IF EXISTS( SELECT * FROM #Alert_Database_Created )
	BEGIN
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		-- Declara as variaveis
		DECLARE @EmailBody VARCHAR(MAX), @AlertJobHeader VARCHAR(MAX), @AlertDatabaseCreated VARCHAR(MAX), 
				@EmptyBodyEmail VARCHAR(MAX), @Importance AS VARCHAR(6), @Subject VARCHAR(500)
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertJobHeader = '<font color=black bold=true size= 5>'
		SET @AlertJobHeader = @AlertJobHeader + '<BR /> Database(s) created in the last ' +  CAST((@Created_Database_Parameter) AS VARCHAR) + ' hours <BR />'
		SET @AlertJobHeader = @AlertJobHeader + '</font>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertDatabaseCreated = CAST( (
			SELECT td =  
								[name]					+ '</td>'
					+ '<td>' +	[recovery_model_desc]	+ '</td>'
					+ '<td>' +  [Create_Date]			+ '</td>'
			FROM (      
					-- Dados da Tabela do EMAIL
					SELECT [name], [recovery_model_desc], CONVERT(VARCHAR(20), [create_date], 120) AS [Create_Date]
					FROM #Alert_Database_Created
		
				  ) AS D
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
		)
		
		-- Corrige a Formatação da Tabela
		SET @AlertDatabaseCreated = REPLACE( REPLACE( REPLACE( @AlertDatabaseCreated, '&lt;', '<' ), '&gt;', '>' ), '<td>', '<td align = center>')
		
		-- Títulos da Tabela do EMAIL
		SET @AlertDatabaseCreated =	
				'<table cellspacing="2" cellpadding="5" border="3">'
				+	'<tr>
						<th width="300" bgcolor=#0B0B61><font color=white>Database Name</font></th>
						<th width="300" bgcolor=#0B0B61><font color=white>Recovery Model</font></th>
						<th width="300" bgcolor=#0B0B61><font color=white>Created Date</font></th>
					 </tr>'
				+ REPLACE( REPLACE( @AlertDatabaseCreated, '&lt;', '<' ), '&gt;', '>' )
				+ '</table>'
			
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
		
		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: Database(s) created in the last ' +  CAST((@Created_Database_Parameter) AS VARCHAR) + ' hours in the server: ' + @@SERVERNAME,
				@EmailBody =	@AlertJobHeader + @EmptyBodyEmail + @AlertDatabaseCreated + @EmptyBodyEmail
		
		/*******************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1
	END
END

GO
/****** Object:  StoredProcedure [dbo].[usp_Database_Errors_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: ERRO BANCO DE DADOS
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Database_Errors_Alert]
AS
BEGIN
	SET NOCOUNT ON

	-- Declara as variaveis
	DECLARE @Subject VARCHAR(500), @Type TINYINT, @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@AlertCorruptedPageHeader VARCHAR(MAX), @AlertCorruptedPageTable VARCHAR(MAX), @EmailDestination VARCHAR(500),
			@AlertDatabaseStatusHeader VARCHAR(MAX), @AlertDatabaseStatusTable VARCHAR(MAX), @ProfileEmail VARCHAR(200)		
	
	-- Página Corrompida
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Corrupted Page')

	/*******************************************************************************************************************************
	--	ALERTA: PAGINA CORROMPIDA
	*******************************************************************************************************************************/
	IF(OBJECT_ID('temp..#temp_Corrupted_page') IS NOT NULL) DROP TABLE #temp_Corrupted_page

	SELECT SP.*
	INTO #temp_Corrupted_page
	FROM [msdb].[dbo].[suspect_pages] SP
	LEFT JOIN [dbo].[Suspect_Pages_Historic] HSP ON	SP.database_id = HSP.database_id AND SP.file_id = HSP.file_id
														AND SP.[page_id] = HSP.[page_id]
														AND CAST(SP.last_update_date AS DATE) = CAST(HSP.corruption_date AS DATE)
	WHERE 	HSP.[page_id] IS NULL

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	-- Status Database
	SELECT @Id_Alert_Parameter = 8	-- SELECT * FROM [dbo].Alert_Parameters
	
	SELECT	@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Página Corrompida

	/*******************************************************************************************************************************
	-- Verifica se existe alguma Página Corrompida
	*******************************************************************************************************************************/
	IF EXISTS (SELECT TOP 1 page_id FROM #temp_Corrupted_page) 
	BEGIN	-- INICIO - ALERTA	
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/			

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertCorruptedPageHeader = '<font color=black bold=true size=5>'			            
		SET @AlertCorruptedPageHeader = @AlertCorruptedPageHeader + '<BR /> Corrupted Pages <BR />' 
		SET @AlertCorruptedPageHeader = @AlertCorruptedPageHeader + '</font>'

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertCorruptedPageTable = CAST( (    
			SELECT td =				[Database_Name]			+ '</td>'
						+ '<td>' +	file_id				+ '</td>'
						+ '<td>' +	page_id				+ '</td>'
						+ '<td>' +	event_type			+ '</td>'
						+ '<td>' +	error_count			+ '</td>'
						+ '<td>' +	last_update_date	+ '</td>'

			FROM (
					-- Dados da Tabela do EMAIL
					SELECT	B.name AS [Database_Name], 
							CAST(file_id AS VARCHAR) AS file_id, 
							CAST(page_id AS VARCHAR) AS page_id, 
							CAST(event_type AS VARCHAR) AS event_type, 
							CAST(error_count AS VARCHAR) AS error_count,								
							CONVERT(VARCHAR(20), last_update_date, 120) AS last_update_date
					FROM #temp_Corrupted_page A
					JOIN [sys].[databases] B ON B.[database_id] = A.[database_id]
					
			) AS D
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
		)   
			      
		-- Corrige a Formatação da Tabela
		SET @AlertCorruptedPageTable = REPLACE( REPLACE( REPLACE( @AlertCorruptedPageTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			    
		-- Títulos da Tabela do EMAIL
		SET @AlertCorruptedPageTable = 
				'<table cellspacing="2" cellpadding="5" border="3">'    
				+	'<tr>
						<th bgcolor=#0B0B61 width="300"><font color=white>Database Name</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>File_Id</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>Page_Id</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>Event_Type</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>Error_Count</font></th>
						<th bgcolor=#0B0B61 width="180"><font color=white>Last_Update_Date</font></th>
					</tr>'    
				+ REPLACE( REPLACE( @AlertCorruptedPageTable, '&lt;', '<'), '&gt;', '>')
				+ '</table>' 
			
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'

		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: There is one or more corrupted pages in the database on the Server: ' + @@SERVERNAME,
				@EmailBody =	@AlertCorruptedPageHeader + @EmptyBodyEmail + @AlertCorruptedPageTable + @EmptyBodyEmail 
		
		/*******************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Suspect_Pages_Historic]
		SELECT	[database_id] ,
				[file_id] ,
				[page_id] ,
				[event_type] ,
				[last_update_date]
		FROM #temp_Corrupted_page

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1	
	END		-- FIM - ALERTA
			

	/*******************************************************************************************************************************
	--	ALERTA: DATABASE INDISPONIVEL
	*******************************************************************************************************************************/	
	-- Status Database
	SELECT @Id_Alert_Parameter = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Database Status')
	
	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@EmailDestination = Email
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Status Database

	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA
	SELECT @Type = [Type]
	FROM [dbo].[Alerts]		
	WHERE [Id] = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )
	
	/*******************************************************************************************************************************
	-- Verifica se alguma Database não está ONLINE
	*******************************************************************************************************************************/ 
	IF EXISTS	(
					SELECT NULL
					FROM [sys].[databases]
					WHERE [state_desc] NOT IN ('ONLINE','RESTORING')
				)
	BEGIN	-- INICIO - ALERTA		
		IF ISNULL(@Type, 0) = 0	-- Envia o Alerta apenas uma vez
		BEGIN			
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - ALERTA
			*******************************************************************************************************************************/

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertDatabaseStatusHeader = '<font color=black bold=true size=5>'			            
			SET @AlertDatabaseStatusHeader = @AlertDatabaseStatusHeader + '<BR /> Database Status <BR />' 
			SET @AlertDatabaseStatusHeader = @AlertDatabaseStatusHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertDatabaseStatusTable = CAST( (    
				SELECT td =				[name]			+ '</td>'
							+ '<td>' +	[state_desc]	+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL  
						SELECT [name], [state_desc]
						FROM [sys].[databases]
						WHERE [state_desc] NOT IN ('ONLINE','RESTORING')
						
					  ) AS D ORDER BY [name]
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertDatabaseStatusTable = REPLACE( REPLACE( REPLACE( @AlertDatabaseStatusTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			    
			-- Títulos da Tabela do EMAIL
			SET @AlertDatabaseStatusTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Status</font></th>        
						</tr>'    
					+ REPLACE( REPLACE( @AlertDatabaseStatusTable, '&lt;', '<'), '&gt;', '>')
					+ '</table>' 
			             
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =  'ALERT: There is one or more database not ONLINE in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertDatabaseStatusHeader + @EmptyBodyEmail + @AlertDatabaseStatusTable + @EmptyBodyEmail
			
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'

			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - ALERTA
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
					
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 1			
		END
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR			
		IF ISNULL(@Type, 0) = 1
		BEGIN
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR
			*******************************************************************************************************************************/			

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertDatabaseStatusHeader = '<font color=black bold=true size=5>'			            
			SET @AlertDatabaseStatusHeader = @AlertDatabaseStatusHeader + '<BR /> Database Status <BR />' 
			SET @AlertDatabaseStatusHeader = @AlertDatabaseStatusHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertDatabaseStatusTable = CAST( (    
				SELECT td =				[name]			+ '</td>'
							+ '<td>' +	[state_desc]	+ '</td>'

				FROM (
						-- Dados da Tabela do EMAIL
						SELECT [name], [state_desc]
						FROM [sys].[databases]
					
				) AS D ORDER BY [name]
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertDatabaseStatusTable = REPLACE( REPLACE( REPLACE( @AlertDatabaseStatusTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			    
			-- Títulos da Tabela do EMAIL
			SET @AlertDatabaseStatusTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Status</font></th>        
						</tr>'    
					+ REPLACE( REPLACE( @AlertDatabaseStatusTable, '&lt;', '<'), '&gt;', '>')
					+ '</table>' 
			
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: All databases are now ONLINE in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertDatabaseStatusHeader + @EmptyBodyEmail + @AlertDatabaseStatusTable + @EmptyBodyEmail 
			
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'

			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
						
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 0
		END
	END		-- FIM - CLEAR
END


GO
/****** Object:  StoredProcedure [dbo].[usp_Databases_without_backup]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*******************************************************************************************************************************
--	ALERTA: DATABASE SEM BACKUP
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Databases_without_backup]
AS
BEGIN
	SET NOCOUNT ON

	-- Databases sem Backup
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Databases without backup')

	-- Declara as variaveis
	DECLARE @Qty_Databases INT, @Qty_Databases_Restore INT

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	DECLARE @Database_Without_Backup_Parameter INT, @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	SELECT	@Database_Without_Backup_Parameter = Parameter_Value,		-- Hours
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter			-- Databases sem Backup

	-- Verifica a Quantidade Total de Databases
	IF ( OBJECT_ID('tempdb..#Alert_Backup_All_Databases') IS NOT NULL )
		DROP TABLE #Alert_Backup_All_Databases

	SELECT [name] AS [Database Name]
	INTO #Alert_Backup_All_Databases
	FROM [sys].[databases]
	WHERE [name] NOT IN ('tempdb', 'ReportServerTempDB') AND state_desc <> 'OFFLINE'

	SELECT @Qty_Databases = COUNT(*)
	FROM #Alert_Backup_All_Databases

	-- Verifica a Quantidade de Databases que tiveram Backup nas ultimas 14 Hours
	IF ( OBJECT_ID('tempdb..#Alert_Databases_With_Backup') IS NOT NULL)
		DROP TABLE #Alert_Databases_With_Backup

	SELECT DISTINCT [database_name] AS [Database Name]
	INTO #Alert_Databases_With_Backup
	FROM [msdb].[dbo].[backupset] B
	JOIN [msdb].[dbo].[backupmediafamily] BF ON B.[media_set_id] = BF.[media_set_id]
	WHERE	[backup_start_date] >= DATEADD(hh, -@Database_Without_Backup_Parameter, GETDATE())
			AND [type] IN ('D','I')

	SELECT @Qty_Databases_Restore = COUNT(*) 
	FROM #Alert_Databases_With_Backup
	
	/*******************************************************************************************************************************
	--	Validate if less than 70 % of the databases had a backup
	*******************************************************************************************************************************/
	if(@Qty_Databases_Restore < @Qty_Databases * 0.7)
	BEGIN	
		-- Databases que não tiveram Backup
		IF ( OBJECT_ID('tempdb..#Alert_Backup_Databases_Without_Backup') IS NOT NULL )
			DROP TABLE #Alert_Backup_Databases_Without_Backup
		
		SELECT A.[Database Name]
		INTO #Alert_Backup_Databases_Without_Backup
		FROM #Alert_Backup_All_Databases A WITH(NOLOCK)
		LEFT JOIN #Alert_Databases_With_Backup B WITH(NOLOCK) ON A.[Database Name] = B.[Database Name]
		WHERE B.[Database Name] IS NULL
		
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		-- Declara as variaveis
		DECLARE @EmailBody VARCHAR(MAX), @AlertJobHeader VARCHAR(MAX), @AlertLogTable VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
				@Importance AS VARCHAR(6), @Subject VARCHAR(500)
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertJobHeader = '<font color=black bold=true size=5>'				            
		SET @AlertJobHeader = @AlertJobHeader + '<BR /> Databases without backup in the last ' +  CAST((@Database_Without_Backup_Parameter) AS VARCHAR) + ' hours <BR />' 
		SET @AlertJobHeader = @AlertJobHeader + '</font>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertLogTable = CAST( (    
			SELECT td =  [Database Name] + '</td>' 

			FROM (
					-- Dados da Tabela do EMAIL
					SELECT [Database Name]
					FROM #Alert_Backup_Databases_Without_Backup
					
				  ) AS D ORDER BY [Database Name] DESC
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
		)  
		
		-- Corrige a Formatação da Tabela
		SET @AlertLogTable = REPLACE( REPLACE( REPLACE( @AlertLogTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
		
		-- Títulos da Tabela do EMAIL
		SET @AlertLogTable = 
				'<table cellspacing="2" cellpadding="5" border="3">'
				+	'<tr>
						<th width="200" bgcolor=#0B0B61><font color=white>Database</font></th> 
					</tr>'    
				+ REPLACE( REPLACE( @AlertLogTable, '&lt;', '<'), '&gt;', '>')
				+ '</table>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
		
		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: There is one or more databases without backup in the last ' +  CAST((@Database_Without_Backup_Parameter) AS VARCHAR) + ' hours in the server: ' + @@SERVERNAME,
				@EmailBody =	@AlertJobHeader + @EmptyBodyEmail + @AlertLogTable + @EmptyBodyEmail
				
		/*******************************************************************************************************************************
		-- Includes an image with a link
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

   		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/		
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1
	END
END

GO
/****** Object:  StoredProcedure [dbo].[usp_Disk_Space_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_Disk_Space_Alert]
AS
BEGIN
    SET NOCOUNT ON;

    -- Cria a tabela que ira armazenar os dados dos processos
    IF (OBJECT_ID('tempdb..#Disk_Space_DMV') IS NOT NULL)
        DROP TABLE #Disk_Space_DMV;

    SELECT DISTINCT
           volume_mount_point [Drive],
           CONVERT(DECIMAL(18, 2), (total_bytes / 1073741824.0) * 1024.00) AS [Size (MB)], ---1GB = 1073741824 bytes    
           CONVERT(DECIMAL(18, 2), (available_bytes / 1073741824.0) * 1024.00) AS [Free (MB)],
           CAST(CAST(available_bytes AS FLOAT) / CAST(total_bytes AS FLOAT) AS DECIMAL(18, 2)) * 100 AS [Free (%)]
    INTO #Disk_Space_DMV
    FROM
    (
        SELECT volume_mount_point,
               total_bytes,
               MAX(available_bytes) available_bytes
        FROM sys.master_files
            CROSS APPLY sys.dm_os_volume_stats(database_id, file_id)
        GROUP BY volume_mount_point,
                 total_bytes
    ) A;


    -- Cria a tabela que ira armazenar os dados dos processos
    IF (OBJECT_ID('tempdb..#WhoisActiveResult') IS NOT NULL)
        DROP TABLE #WhoisActiveResult;

    CREATE TABLE #WhoisActiveResult
    (
        [dd hh:mm:ss.mss] VARCHAR(20),
        [database_name] NVARCHAR(128),
        [login_name] NVARCHAR(128),
        [host_name] NVARCHAR(128),
        [start_time] DATETIME,
        [status] VARCHAR(30),
        [session_id] INT,
        [blocking_session_id] INT,
        [wait_info] VARCHAR(MAX),
        [open_tran_count] INT,
        [CPU] VARCHAR(MAX),
        [reads] VARCHAR(MAX),
        [writes] VARCHAR(MAX),
        [sql_command] XML
    );

    -- Declara as variaveis
    DECLARE @Subject VARCHAR(500),
            @Type TINYINT,
            @Importance AS VARCHAR(6),
            @EmailBody VARCHAR(MAX),
            @AlertDiskHeader VARCHAR(MAX),
            @AlertDiskTable VARCHAR(MAX),
            @EmptyBodyEmail VARCHAR(MAX),
            @EmailDestination VARCHAR(500),
            @WhoisactiveResultHeader VARCHAR(MAX),
            @WhoisactiveResultTable VARCHAR(MAX),
            @Disk_Space_Parameter INT,
            @ProfileEmail VARCHAR(200);

    --------------------------------------------------------------------------------------------------------------------------------
    -- Recupera os parametros do Alerta
    --------------------------------------------------------------------------------------------------------------------------------
    -- Espaco Disco
    DECLARE @Id_Alert_Parameter INT = (
                                          SELECT Id_Alert_Parameter
                                          FROM [dbo].Alert_Parameters (NOLOCK)
                                          WHERE Alert_Name = 'Disk Space'
                                      );

    SELECT @Disk_Space_Parameter = Parameter_Value, -- Percentage
           @EmailDestination = Email,
           @ProfileEmail = Email_Profile
    FROM [dbo].Alert_Parameters
    WHERE Id_Alert_Parameter = @Id_Alert_Parameter; -- Disk Space

    -- Validate the last alert type -> 0: CLEAR / 1: ALERT
    SELECT @Type = [type]
    FROM [dbo].Alerts
    WHERE Id =
    (
        SELECT MAX(Id)
        FROM [dbo].Alerts
        WHERE Id_Alert_Parameter = @Id_Alert_Parameter
    );



    /*******************************************************************************************************************************
       --     Verifica o Espaço Livre em Disco
*******************************************************************************************************************************/
    IF EXISTS
    (
        SELECT NULL
        FROM #Disk_Space_DMV
        WHERE [Free (%)] < (100 - @Disk_Space_Parameter)
    )
    BEGIN -- INICIO - ALERTA
        IF ISNULL(@Type, 0) = 0 -- Envia o Alerta apenas uma vez
        BEGIN
            --------------------------------------------------------------------------------------------------------------------------------
            --     ALERTA - DADOS - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------
            -- Retorna todos os processos que estão sendo executados no momento
            EXEC [dbo].[sp_WhoIsActive] @get_outer_command = 1,
                                        @output_column_list = '[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
                                        @destination_table = '#WhoisActiveResult';

            -- Altera a coluna que possui o comando SQL
            ALTER TABLE #WhoisActiveResult ALTER COLUMN [sql_command] VARCHAR(MAX);

            UPDATE #WhoisActiveResult
            SET [sql_command] = REPLACE(
                                           REPLACE(
                                                      REPLACE(
                                                                 REPLACE(
                                                                            CAST([sql_command] AS VARCHAR(1000)),
                                                                            '<?query --',
                                                                            ''
                                                                        ),
                                                                 '--?>',
                                                                 ''
                                                             ),
                                                      '&gt;',
                                                      '>'
                                                  ),
                                           '&lt;',
                                           ''
                                       );

            -- select * from #WhoisActiveResult

            -- Validate if there is any executing process
            IF NOT EXISTS (SELECT TOP 1 * FROM #WhoisActiveResult)
            BEGIN
                INSERT INTO #WhoisActiveResult
                SELECT NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL;
            END;

            /*******************************************************************************************************************************
                     --     CRIA O EMAIL - ALERTA
              *******************************************************************************************************************************/

            --------------------------------------------------------------------------------------------------------------------------------
            --     ALERTA - HEADER
            --------------------------------------------------------------------------------------------------------------------------------
            SET @AlertDiskHeader = '<font color=black bold=true size=5>';
            SET @AlertDiskHeader = @AlertDiskHeader + '<BR /> Disk Space on the Server <BR />';
            SET @AlertDiskHeader = @AlertDiskHeader + '</font>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     ALERTA - BODY
            --------------------------------------------------------------------------------------------------------------------------------
            SET @AlertDiskTable
                = CAST(
                  (
                      SELECT td = [Drive] + '</td>' + '<td>' + [Size (MB)] + '</td>' + '<td>' + [Used (MB)] + '</td>'
                                  + '<td>' + [Free (MB)] + '</td>' + '<td>' + [Free (%)] + '</td>' + '<td>'
                                  + [Used (%)] + '</td>'
                      --            + '<td>' +  [Used by SQL (MB)]      + '</td>'
                      FROM
                      (
                          -- Dados da Tabela do EMAIL       
                          --SELECT        [Drive], CAST([Size (MB)] AS VARCHAR) AS [Size (MB)], CAST([Used (MB)] AS VARCHAR) AS [Used (MB)], CAST([Free (MB)] AS VARCHAR) AS [Free (MB)], 
                          --            CAST([Free (%)] AS VARCHAR) AS [Free (%)], CAST([Used (%)] AS VARCHAR) AS [Used (%)], CAST([Used by SQL (MB)] AS VARCHAR) AS [Used by SQL (MB)]
                          --FROM [dbo].[_DTS_Espacodisco]

                          SELECT [Drive],
                                 CAST([Size (MB)] AS VARCHAR) AS [Size (MB)],
                                 CAST(([Size (MB)] - [Free (MB)]) AS VARCHAR) [Used (MB)],
                                 CAST([Free (MB)] AS VARCHAR) AS [Free (MB)],
                                 CAST([Free (%)] AS VARCHAR) AS [Free (%)],
                                 CAST((100 - [Free (%)]) AS VARCHAR) [Used (%)]
                          FROM #Disk_Space_DMV
                      ) AS D
                      ORDER BY [Drive]
                      FOR XML PATH('tr'), TYPE
                  ) AS VARCHAR(MAX));





            -- Corrige a Formatação da Tabela
            SET @AlertDiskTable
                = REPLACE(REPLACE(REPLACE(@AlertDiskTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>');

            -- Títulos da Tabela do EMAIL
            SET @AlertDiskTable
                = '<table cellspacing="2" cellpadding="5" border="3">'
                  + '<tr>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Drive (%)</font></th>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Size (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Used (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Free (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Free (%)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Used (%)</font></th>  
                                                                            
                                         </tr>' + REPLACE(REPLACE(@AlertDiskTable, '&lt;', '<'), '&gt;', '>')
                  + '</table>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     ALERTA - HEADER - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------
            SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>';
            SET @WhoisactiveResultHeader
                = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instance <BR />';
            SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     ALERTA - BODY - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------
            SET @WhoisactiveResultTable
                = CAST(
                  (
                      SELECT td = [Duration] + '</td>' + '<td>' + [database_name] + '</td>' + '<td>' + [login_name]
                                  + '</td>' + '<td>' + [host_name] + '</td>' + '<td>' + [start_time] + '</td>' + '<td>'
                                  + [status] + '</td>' + '<td>' + [session_id] + '</td>' + '<td>'
                                  + [blocking_session_id] + '</td>' + '<td>' + [Wait] + '</td>' + '<td>'
                                  + [open_tran_count] + '</td>' + '<td>' + [CPU] + '</td>' + '<td>' + [reads] + '</td>'
                                  + '<td>' + [writes] + '</td>' + '<td>' + [sql_command] + '</td>'
                      FROM
                      (
                          -- Dados da Tabela do EMAIL
                          SELECT ISNULL([dd hh:mm:ss.mss], '-') AS [Duration],
                                 ISNULL([database_name], '-') AS [database_name],
                                 ISNULL([login_name], '-') AS [login_name],
                                 ISNULL([host_name], '-') AS [host_name],
                                 ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-') AS [start_time],
                                 ISNULL([status], '-') AS [status],
                                 ISNULL(CAST([session_id] AS VARCHAR), '-') AS [session_id],
                                 ISNULL(CAST([blocking_session_id] AS VARCHAR), '-') AS [blocking_session_id],
                                 ISNULL([wait_info], '-') AS [Wait],
                                 ISNULL(CAST([open_tran_count] AS VARCHAR), '-') AS [open_tran_count],
                                 ISNULL([CPU], '-') AS [CPU],
                                 ISNULL([reads], '-') AS [reads],
                                 ISNULL([writes], '-') AS [writes],
                                 ISNULL(SUBSTRING([sql_command], 1, 300), '-') AS [sql_command]
                          FROM #WhoisActiveResult
                      ) AS D
                      ORDER BY [Duration] DESC
                      FOR XML PATH('tr'), TYPE
                  ) AS VARCHAR(MAX));

            -- Corrige a Formatação da Tabela
            SET @WhoisactiveResultTable
                = REPLACE(
                             REPLACE(REPLACE(@WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'),
                             '<td>',
                             '<td align = center>'
                         );

            -- Títulos da Tabela do EMAIL
            SET @WhoisactiveResultTable
                = '<table cellspacing="2" cellpadding="5" border="3">'
                  + '<tr>
                                                <th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
                                                <th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
                                                <th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
                                                <th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
                                                <th bgcolor=#0B0B61 width="60"><font color=white>Open Transactions</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
                                                <th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
                                         </tr>' + REPLACE(REPLACE(@WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')
                  + '</table>';

            --------------------------------------------------------------------------------------------------------------------------------
            -- Insere um Espaço em Branco no EMAIL
            --------------------------------------------------------------------------------------------------------------------------------
            SET @EmptyBodyEmail = '';
            SET @EmptyBodyEmail
                = '<table cellpadding="5" cellspacing="5" border="0">'
                  + '<tr>
                                                <th width="500">               </th>
                                         </tr>'
                  + REPLACE(REPLACE(ISNULL(@EmptyBodyEmail, ''), '&lt;', '<'), '&gt;', '>') + '</table>';

            /*******************************************************************************************************************************
                     --     ENVIA O EMAIL - ALERTA
              *******************************************************************************************************************************/
            SELECT @Importance = 'High',
                   @Subject
                       = 'ALERT: There are one or more disk volumes with ' + CAST((@Disk_Space_Parameter) AS VARCHAR)
                         + '% of utilization on the Server: ' + @@SERVERNAME,
                   @EmailBody
                       = @AlertDiskHeader + @EmptyBodyEmail + @AlertDiskTable + @EmptyBodyEmail
                         + @WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail;

            /*******************************************************************************************************************************
                     -- Inclui uma imagem com link para o site do Fabricio Lima
              *******************************************************************************************************************************/
            SELECT @EmailBody
                = @EmailBody + '<br/><br/>'
                  + '<a href="http://www.sqlsaturday.com" target=_blank> 
                                                <img  src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
                                                              height="80" width="300"/>
                                         </a>';

            EXEC [msdb].[dbo].[sp_send_dbmail] @profile_name = @ProfileEmail,
                                               @recipients = @EmailDestination,
                                               @subject = @Subject,
                                               @body = @EmailBody,
                                               @body_format = 'HTML',
                                               @importance = @Importance;

            /*******************************************************************************************************************************
                     -- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
              *******************************************************************************************************************************/
            INSERT INTO [dbo].[Alerts]
            (
                Id_Alert_Parameter,
                Alert_Message,
                [type]
            )
            SELECT @Id_Alert_Parameter,
                   @Subject,
                   1;
        END;
    END; -- FIM - ALERTA
    ELSE
    BEGIN -- INICIO - CLEAR                        
        IF @Type = 1
        BEGIN
            --------------------------------------------------------------------------------------------------------------------------------
            --     CLEAR - DADOS - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------                    
            -- Retorna todos os processos que estão sendo executados no momento
            EXEC [dbo].[sp_WhoIsActive] @get_outer_command = 1,
                                        @output_column_list = '[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
                                        @destination_table = '#WhoisActiveResult';

            -- Altera a coluna que possui o comando SQL
            ALTER TABLE #WhoisActiveResult ALTER COLUMN [sql_command] VARCHAR(MAX);

            UPDATE #WhoisActiveResult
            SET [sql_command] = REPLACE(
                                           REPLACE(
                                                      REPLACE(
                                                                 REPLACE(
                                                                            CAST([sql_command] AS VARCHAR(1000)),
                                                                            '<?query --',
                                                                            ''
                                                                        ),
                                                                 '--?>',
                                                                 ''
                                                             ),
                                                      '&gt;',
                                                      '>'
                                                  ),
                                           '&lt;',
                                           ''
                                       );

            -- select * from #WhoisActiveResult

            -- Verifica se não existe nenhum processo em Execução
            IF NOT EXISTS (SELECT TOP 1 * FROM #WhoisActiveResult)
            BEGIN
                INSERT INTO #WhoisActiveResult
                SELECT NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL,
                       NULL;
            END;

            /*******************************************************************************************************************************
                     --     CRIA O EMAIL - CLEAR
              *******************************************************************************************************************************/

            --------------------------------------------------------------------------------------------------------------------------------
            --     CLEAR - HEADER
            --------------------------------------------------------------------------------------------------------------------------------
            SET @AlertDiskHeader = '<font color=black bold=true size=5>';
            SET @AlertDiskHeader = @AlertDiskHeader + '<BR /> Disk Space on the Server <BR />';
            SET @AlertDiskHeader = @AlertDiskHeader + '</font>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     CLEAR - BODY
            --------------------------------------------------------------------------------------------------------------------------------       
            SET @AlertDiskTable
                = CAST(
                  (
                      SELECT td = [Drive] + '</td>' + '<td>' + [Size (MB)] + '</td>' + '<td>' + [Used (MB)] + '</td>'
                                  + '<td>' + [Free (MB)] + '</td>' + '<td>' + [Free (%)] + '</td>' + '<td>'
                                  + [Used (%)] + '</td>'
                      --            + '<td>' +  [Used by SQL (MB)]      + '</td>'
                      FROM
                      (
                          -- Dados da Tabela do EMAIL      
                          /*SELECT        [Drive], CAST([Size (MB)] AS VARCHAR) AS [Size (MB)], CAST([Used (MB)] AS VARCHAR) AS [Used (MB)], CAST([Free (MB)] AS VARCHAR) AS [Free (MB)], 
                                                       CAST([Free (%)] AS VARCHAR) AS [Free (%)], CAST([Used (%)] AS VARCHAR) AS [Used (%)], CAST([Used by SQL (MB)] AS VARCHAR) AS [Used by SQL (MB)]
                                         FROM [dbo].[_DTS_Espacodisco] */

                          SELECT [Drive],
                                 CAST([Size (MB)] AS VARCHAR) AS [Size (MB)],
                                 CAST(([Size (MB)] - [Free (MB)]) AS VARCHAR) [Used (MB)],
                                 CAST([Free (MB)] AS VARCHAR) AS [Free (MB)],
                                 CAST([Free (%)] AS VARCHAR) AS [Free (%)],
                                 CAST((100 - [Free (%)]) AS VARCHAR) [Used (%)]
                          FROM #Disk_Space_DMV
                      ) AS D
                      ORDER BY [Drive]
                      FOR XML PATH('tr'), TYPE
                  ) AS VARCHAR(MAX));

            -- Corrige a Formatação da Tabela
            SET @AlertDiskTable
                = REPLACE(REPLACE(REPLACE(@AlertDiskTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>');

            -- Títulos da Tabela do EMAIL
            SET @AlertDiskTable
                = '<table cellspacing="2" cellpadding="5" border="3">'
                  + '<tr>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Drive (%)</font></th>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Size (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Used (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Free (MB)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Free (%)</font></th>  
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Used (%)</font></th>  
                                                <th bgcolor=#0B0B61 width="150"><font color=white>Used by SQL (MB)</font></th>
                                         </tr>' + REPLACE(REPLACE(@AlertDiskTable, '&lt;', '<'), '&gt;', '>')
                  + '</table>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     CLEAR - HEADER - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------
            SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>';
            SET @WhoisactiveResultHeader
                = @WhoisactiveResultHeader + '<BR /> Processes being executed in the database <BR />';
            SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>';

            --------------------------------------------------------------------------------------------------------------------------------
            --     CLEAR - BODY - WHOISACTIVE
            --------------------------------------------------------------------------------------------------------------------------------
            SET @WhoisactiveResultTable
                = CAST(
                  (
                      SELECT td = [Duration] + '</td>' + '<td>' + [database_name] + '</td>' + '<td>' + [login_name]
                                  + '</td>' + '<td>' + [host_name] + '</td>' + '<td>' + [start_time] + '</td>' + '<td>'
                                  + [status] + '</td>' + '<td>' + [session_id] + '</td>' + '<td>'
                                  + [blocking_session_id] + '</td>' + '<td>' + [Wait] + '</td>' + '<td>'
                                  + [open_tran_count] + '</td>' + '<td>' + [CPU] + '</td>' + '<td>' + [reads] + '</td>'
                                  + '<td>' + [writes] + '</td>' + '<td>' + [sql_command] + '</td>'
                      FROM
                      (
                          -- Dados da Tabela do EMAIL
                          SELECT ISNULL([dd hh:mm:ss.mss], '-') AS [Duration],
                                 ISNULL([database_name], '-') AS [database_name],
                                 ISNULL([login_name], '-') AS [login_name],
                                 ISNULL([host_name], '-') AS [host_name],
                                 ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-') AS [start_time],
                                 ISNULL([status], '-') AS [status],
                                 ISNULL(CAST([session_id] AS VARCHAR), '-') AS [session_id],
                                 ISNULL(CAST([blocking_session_id] AS VARCHAR), '-') AS [blocking_session_id],
                                 ISNULL([wait_info], '-') AS [Wait],
                                 ISNULL(CAST([open_tran_count] AS VARCHAR), '-') AS [open_tran_count],
                                 ISNULL([CPU], '-') AS [CPU],
                                 ISNULL([reads], '-') AS [reads],
                                 ISNULL([writes], '-') AS [writes],
                                 ISNULL(SUBSTRING([sql_command], 1, 300), '-') AS [sql_command]
                          FROM #WhoisActiveResult
                      ) AS D
                      ORDER BY [Duration] DESC
                      FOR XML PATH('tr'), TYPE
                  ) AS VARCHAR(MAX));

            -- Corrige a Formatação da Tabela
            SET @WhoisactiveResultTable
                = REPLACE(
                             REPLACE(REPLACE(@WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'),
                             '<td>',
                             '<td align = center>'
                         );

            -- Títulos da Tabela do EMAIL
            SET @WhoisactiveResultTable
                = '<table cellspacing="2" cellpadding="5" border="3">'
                  + '<tr>
                                                <th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
                                                <th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
                                                <th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
                                                <th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
                                                <th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
                                                <th bgcolor=#0B0B61 width="60"><font color=white>Open Transactions</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
                                                <th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
                                                <th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
                                         </tr>' + REPLACE(REPLACE(@WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')
                  + '</table>';

            --------------------------------------------------------------------------------------------------------------------------------
            -- Insere um Espaço em Branco no EMAIL
            --------------------------------------------------------------------------------------------------------------------------------
            SET @EmptyBodyEmail = '';
            SET @EmptyBodyEmail
                = '<table cellpadding="5" cellspacing="5" border="0">'
                  + '<tr>
                                                <th width="500">               </th>
                                         </tr>'
                  + REPLACE(REPLACE(ISNULL(@EmptyBodyEmail, ''), '&lt;', '<'), '&gt;', '>') + '</table>';

            /*******************************************************************************************************************************
                     --     ENVIA O EMAIL - CLEAR
              *******************************************************************************************************************************/
            SELECT @Importance = 'High',
                   @Subject
                       = 'CLEAR: There are no more disk volumes with ' + CAST((@Disk_Space_Parameter) AS VARCHAR)
                         + '% of utilization on the Server: ' + @@SERVERNAME,
                   @EmailBody
                       = @AlertDiskHeader + @EmptyBodyEmail + @AlertDiskTable + @EmptyBodyEmail
                         + @WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail;

            /*******************************************************************************************************************************
                     -- Inclui uma imagem com link para o site do Fabricio Lima
              *******************************************************************************************************************************/
            SELECT @EmailBody
                = @EmailBody + '<br/><br/>'
                  + '<a href="http://www.sqlsaturday.com" target=_blank> 
                                                <img  src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
                                                              height="80" width="300"/>
                                         </a>';

            EXEC [msdb].[dbo].[sp_send_dbmail] @profile_name = @ProfileEmail,
                                               @recipients = @EmailDestination,
                                               @subject = @Subject,
                                               @body = @EmailBody,
                                               @body_format = 'HTML',
                                               @importance = @Importance;

            /*******************************************************************************************************************************
                     -- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
              *******************************************************************************************************************************/
            INSERT INTO [dbo].[Alerts]
            (
                Id_Alert_Parameter,
                Alert_Message,
                [type]
            )
            SELECT @Id_Alert_Parameter,
                   @Subject,
                   0;
        END;
    END; -- FIM - CLEAR
END;

GO
/****** Object:  StoredProcedure [dbo].[usp_fillup_transaction_log]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[usp_fillup_transaction_log]
as
insert into tbDummy
values (REPLICATE('SQL',10))
GO
/****** Object:  StoredProcedure [dbo].[usp_Job_Failed_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*******************************************************************************************************************************
--	ALERTA: JOB FALHA
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Job_Failed_Alert]
AS
BEGIN
	SET NOCOUNT ON
		
	IF ( OBJECT_ID('tempdb..#Result_Job_History') IS NOT NULL )
		DROP TABLE #Result_Job_History

	CREATE TABLE #Result_Job_History (
		[Cod]				INT IDENTITY(1,1),
		[Instance_Id]		INT,
		[Job_Id]			VARCHAR(255),
		[Job_Name]			VARCHAR(255),
		[Step_Id]			INT,
		[Step_Name]			VARCHAR(255),
		[SQl_Message_Id]	INT,
		[Sql_Severity]		INT,
		[SQl_Message]		VARCHAR(4490),
		[Run_Status]		INT,
		[Run_Date]			VARCHAR(20),
		[Run_Time]			VARCHAR(20),
		[Run_Duration]		INT,
		[Operator_Emailed]	VARCHAR(100),
		[Operator_NetSent]	VARCHAR(100),
		[Operator_Paged]	VARCHAR(100),
		[Retries_Attempted]	INT,
		[Nm_Server]			VARCHAR(100)  
	)

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	DECLARE @JobFailed_Parametro INT, @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	-- Job Falha
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Job Failed')

	SELECT	@JobFailed_Parametro = Parameter_Value,			-- Hours
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Jobs Failed

	-- Declara as variaveis
	DECLARE @Start_Date VARCHAR (8), @Reference_Date DATETIME	

	SELECT @Reference_Date = GETDATE()

	SELECT	@Start_Date  =	CONVERT(VARCHAR(8), (DATEADD (HOUR, -@JobFailed_Parametro, @Reference_Date)), 112)
	
	INSERT INTO #Result_Job_History
	EXEC [msdb].[dbo].[sp_help_jobhistory] 
			@mode = 'FULL', 
			@start_run_date = @Start_Date

	-- Busca os dados dos JOBS que Falharam
	IF ( OBJECT_ID('tempdb..#Alert_Failed_Jobs') IS NOT NULL )
		DROP TABLE #Alert_Failed_Jobs
	
	SELECT	TOP 50
			[Nm_Server] AS [Server],
			[Job_Name], 
			CASE	WHEN [Run_Status] = 0 THEN 'Failed'
					WHEN [Run_Status] = 1 THEN 'Succeeded'
					WHEN [Run_Status] = 2 THEN 'Retry (step only)'
					WHEN [Run_Status] = 3 THEN 'Cancelled'
					WHEN [Run_Status] = 4 THEN 'In-progress message'
					WHEN [Run_Status] = 5 THEN 'Unknown' 
			END AS [Status],
			CAST(	[Run_Date] + ' ' +
					RIGHT('00' + SUBSTRING([Run_Time], (LEN([Run_Time])-5), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time], (LEN([Run_Time])-3), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time], (LEN([Run_Time])-1), 2), 2) AS VARCHAR
				) AS [Execution_Date],
			RIGHT('00' + SUBSTRING(CAST([Run_Duration] AS VARCHAR), (LEN([Run_Duration])-5), 2), 2) + ':' +
			RIGHT('00' + SUBSTRING(CAST([Run_Duration] AS VARCHAR), (LEN([Run_Duration])-3), 2), 2) + ':' +
			RIGHT('00' + SUBSTRING(CAST([Run_Duration] AS VARCHAR), (LEN([Run_Duration])-1), 2), 2) AS [Run_Duration],
			CAST([SQl_Message] AS VARCHAR(3990)) AS [SQL_Message]
	INTO #Alert_Failed_Jobs
	FROM #Result_Job_History 
	WHERE 
		 -- [Step_Id] = 0 AND condição para o retry
		  [Run_Status] <> 1 AND
		  CAST	(	
					[Run_Date] + ' ' + RIGHT('00' + SUBSTRING([Run_Time],(LEN([Run_Time])-5), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time], (LEN([Run_Time])-3), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time], (LEN([Run_Time])-1), 2), 2) AS DATETIME
				) >= DATEADD(HOUR, -@JobFailed_Parametro, @Reference_Date) AND
		  CAST	(	[Run_Date] + ' ' + RIGHT('00' + SUBSTRING([Run_Time],(LEN([Run_Time])-5), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time],(LEN([Run_Time])-3), 2), 2) + ':' +
					RIGHT('00' + SUBSTRING([Run_Time],(LEN([Run_Time])-1), 2), 2) AS DATETIME
				) < @Reference_Date
	ORDER BY [Execution_Date] DESC
			
	/*******************************************************************************************************************************
	--	Verifica se algum JOB Falhou
	*******************************************************************************************************************************/
	IF EXISTS(SELECT * FROM #Alert_Failed_Jobs)
	BEGIN
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		-- Declara as variaveis
		DECLARE @EmailBody VARCHAR(MAX), @AlertJobHeader VARCHAR(MAX), @AlertJobFailed VARCHAR(MAX), 
				@EmptyBodyEmail VARCHAR(MAX), @Importance AS VARCHAR(6), @Subject VARCHAR(500)
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertJobHeader = '<font color=black bold=true size=5>'				            
		SET @AlertJobHeader = @AlertJobHeader + '<BR /> TOP 50 - Failed Jobs from the last ' +  CAST((@JobFailed_Parametro) AS VARCHAR) + ' hours <BR />' 
		SET @AlertJobHeader = @AlertJobHeader + '</font>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertJobFailed = CAST( (    
			SELECT td =				[Job_Name]		+ '</td>'
						+ '<td>' +	[Status]		+ '</td>'
						+ '<td>' +	[Execution_Date]	+ '</td>'
						+ '<td>' +	[Run_Duration]	+ '</td>'
						+ '<td>' +	[SQL_Message]	+ '</td>'
			FROM (           
					-- Dados da Tabela do EMAIL
					SELECT	[Job_Name], 
							[Status], 
							[Execution_Date], 
							[Run_Duration], 
							[SQL_Message] 
					FROM #Alert_Failed_Jobs
					
				  ) AS D ORDER BY [Execution_Date] DESC
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
		)
		
		-- Corrige a Formatação da Tabela
		SET @AlertJobFailed = REPLACE( REPLACE( REPLACE( @AlertJobFailed, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
		
		-- Títulos da Tabela do EMAIL
		SET @AlertJobFailed = 
				'<table cellspacing="2" cellpadding="5" border="3">'    
				+	'<tr>
						<th bgcolor=#0B0B61 width="300"><font color=white>Job Name</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>Status</font></th>
						<th bgcolor=#0B0B61 width="150"><font color=white>Execution Date</font></th>
						<th bgcolor=#0B0B61 width="100"><font color=white>Duration</font></th>
						<th bgcolor=#0B0B61 width="400"><font color=white>Error Message</font></th>
					</tr>'    
				+ REPLACE( REPLACE( @AlertJobFailed, '&lt;', '<'), '&gt;', '>')   
				+ '</table>'			              
		
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
			
		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: Failed Jobs from the last ' +  CAST((@JobFailed_Parametro) AS VARCHAR) + ' hours in the server: ' + @@SERVERNAME,
				@EmailBody =	@AlertJobHeader + @EmptyBodyEmail + @AlertJobFailed + @EmptyBodyEmail
		
		/*******************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/	
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1
	END	
END

GO
/****** Object:  StoredProcedure [dbo].[usp_SendEmail_Executing_Processes]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	PROCEDURE ENVIA EMAIL WHOISACTIVE DBA
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_SendEmail_Executing_Processes]
AS
BEGIN
	SET NOCOUNT ON

	-- Declara as variaveis
	DECLARE	@Subject VARCHAR(500), @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@WhoisactiveResultHeader VARCHAR(MAX), @WhoisactiveResultTable VARCHAR(MAX), @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	 
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('TempDb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
		
	CREATE TABLE #WhoIsActive_Result (
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),
		[sql_command]			XML
    )      
      
    -- Retorna todos os processos que estão sendo executados no momento
    EXEC [dbo].[sp_whoisactive]
			@get_outer_command =	1,
            @output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
			@destination_table =	'#WhoIsActive_Result'
				    
    -- Altera a coluna que possui o comando SQL
	ALTER TABLE #WhoIsActive_Result
	ALTER COLUMN [sql_command] VARCHAR(MAX)
	
	UPDATE #WhoIsActive_Result
	SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
	
	-- select * from #WhoIsActive_Result
	
	-- Verifica se não existe nenhum processo em Execução
	IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
	BEGIN
		INSERT INTO #WhoIsActive_Result
		SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
	END

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	-- Processos em Execução
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Processes in execution')
	
	SELECT	@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Processos em Execução

	/*******************************************************************************************************************************
	--	CRIA O EMAIL
	*******************************************************************************************************************************/							

	--------------------------------------------------------------------------------------------------------------------------------
	--	HEADER
	--------------------------------------------------------------------------------------------------------------------------------
	SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
	SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instance <BR />'
	SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

	--------------------------------------------------------------------------------------------------------------------------------
	--	BODY
	--------------------------------------------------------------------------------------------------------------------------------
	SET @WhoisactiveResultTable = CAST( (
		SELECT td =				[Duration]				+ '</td>'
					+ '<td>' +  [database_name]			+ '</td>'
					+ '<td>' +  [login_name]			+ '</td>'
					+ '<td>' +  [host_name]				+ '</td>'
					+ '<td>' +  [start_time]			+ '</td>'
					+ '<td>' +  [status]				+ '</td>'
					+ '<td>' +  [session_id]			+ '</td>'
					+ '<td>' +  [blocking_session_id]	+ '</td>'
					+ '<td>' +  [Wait]					+ '</td>'
					+ '<td>' +  [open_tran_count]		+ '</td>'
					+ '<td>' +  [CPU]					+ '</td>'
					+ '<td>' +  [reads]					+ '</td>'
					+ '<td>' +  [writes]				+ '</td>'
					+ '<td>' +  [sql_command]			+ '</td>'

		FROM (  
				-- Dados da Tabela do EMAIL
				SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
						ISNULL([database_name], '-')							AS [database_name],
						ISNULL([login_name], '-')								AS [login_name],
						ISNULL([host_name], '-')								AS [host_name],
						ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
						ISNULL([status], '-')									AS [status],
						ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
						ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
						ISNULL([wait_info], '-')								AS [Wait],
						ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
						ISNULL([CPU], '-')										AS [CPU],
						ISNULL([reads], '-')									AS [reads],
						ISNULL([writes], '-')									AS [writes],
						ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
				FROM #WhoIsActive_Result
		
			  ) AS D ORDER BY [start_time] 
		FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
	) 
	      
	-- Corrige a Formatação da Tabela
	SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
	
	-- Títulos da Tabela do EMAIL
	SET @WhoisactiveResultTable = 
			'<table cellspacing="2" cellpadding="5" border="3">'    
			+	'<tr>
					<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
					<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
					<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
					<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
					<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
					<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
					<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
					<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
				</tr>'    
			+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
			+ '</table>' 
	              
	--------------------------------------------------------------------------------------------------------------------------------
	-- Insere um Espaço em Branco no EMAIL
	--------------------------------------------------------------------------------------------------------------------------------
	SET @EmptyBodyEmail =	''
	SET @EmptyBodyEmail =
			'<table cellpadding="5" cellspacing="5" border="0">' +
				'<tr>
					<th width="500">               </th>
				</tr>'
				+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
			+ '</table>'

	/*******************************************************************************************************************************
	--	Seta as variavis do Email
	*******************************************************************************************************************************/
	SELECT	@Importance =	'High',
			@Subject =		'Processes being executed in the server: ' + @@SERVERNAME,
			@EmailBody =	@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail

	/***********************************************************************************************************************************
	-- Inclui uma imagem com link para o site do Fabricio Lima
	***********************************************************************************************************************************/
	select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
	/*******************************************************************************************************************************
	--	ENVIA O EMAIL
	*******************************************************************************************************************************/		
	EXEC [msdb].[dbo].[sp_send_dbmail]
			@profile_name = @ProfileEmail,
			@recipients =	@EmailDestination ,
			@subject =		@Subject,
			@body =			@EmailBody,
			@body_format =	'HTML',
			@importance =	@Importance
END
GO
/****** Object:  StoredProcedure [dbo].[usp_Slow_Queries]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: Slow Queries
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Slow_Queries]
AS
BEGIN
	SET NOCOUNT ON

	-- Slow Queries
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Slow Queries')

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	DECLARE @Slow_Queries_Parameter INT, @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	SELECT	@Slow_Queries_Parameter = Parameter_Value,	-- Quantidade
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Slow Queries

	-- Cria a tabela com as Slow Queries
	IF ( OBJECT_ID('tempdb..#Slow_Queries_Temp') IS NOT NULL )
		DROP TABLE #Slow_Queries_Temp

	SELECT	[StartTime], 
			[DataBaseName], 
			[Duration],
			[Reads],
			[Writes],
			[CPU],
			[TextData]
	INTO #Slow_Queries_Temp
	FROM [dbo].[Traces]
	WHERE [StartTime] >= DATEADD(mi, -5, GETDATE())
	ORDER BY [Duration] DESC

	-- Declara a variavel e retorna a quantidade de Queries Lentas
	DECLARE @Count_Slow_Queries INT = ( SELECT COUNT(*) FROM #Slow_Queries_Temp ) 
	
	/*******************************************************************************************************************************
	--	Verifica se existem mais de 100 Queries Lentas in the last 5 Minutes
	*******************************************************************************************************************************/
	IF (@Count_Slow_Queries > @Slow_Queries_Parameter)
	BEGIN
		-- Cria a tabela que ira armazenar os dados dos processos
		IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
			DROP TABLE #WhoIsActive_Result
				
		CREATE TABLE #WhoIsActive_Result (		
			[dd hh:mm:ss.mss]		VARCHAR(20),
			[database_name]			NVARCHAR(128),		
			[login_name]			NVARCHAR(128),
			[host_name]				NVARCHAR(128),
			[start_time]			DATETIME,
			[status]				VARCHAR(30),
			[session_id]			INT,
			[blocking_session_id]	INT,
			[wait_info]				VARCHAR(MAX),
			[open_tran_count]		INT,
			[CPU]					VARCHAR(MAX),
			[reads]					VARCHAR(MAX),
			[writes]				VARCHAR(MAX),
			[sql_command]			XML
		)

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - DADOS - WHOISACTIVE
		--------------------------------------------------------------------------------------------------------------------------------
		-- Retorna todos os processos que estão sendo executados no momento
		EXEC [dbo].[sp_whoisactive]
				@get_outer_command =	1,
				@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
				@destination_table =	'#WhoIsActive_Result'
						    
		-- Altera a coluna que possui o comando SQL
		ALTER TABLE #WhoIsActive_Result
		ALTER COLUMN [sql_command] VARCHAR(MAX)
			
		UPDATE #WhoIsActive_Result
		SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
			
		-- select * from #WhoIsActive_Result
			
		-- Verifica se não existe nenhum processo em Execução
		IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
		BEGIN
			INSERT INTO #WhoIsActive_Result
			SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
		END

		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		-- Declara as variaveis
		DECLARE @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @AlertSlowQueriesHeader VARCHAR(MAX),
				@WhoisactiveResultHeader VARCHAR(MAX), @WhoisactiveResultTable VARCHAR(MAX),
				@AlertSlowQueriesTable VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX), @Subject VARCHAR(500)

		--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> TOP 50 - Processes being executed in the instace <BR />'
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
				
					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			) 
			      
			-- Corrige a Formatação da Tabela
			SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @WhoisactiveResultTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertSlowQueriesHeader = '<font color=black bold=true size=5>'		            
		SET @AlertSlowQueriesHeader = @AlertSlowQueriesHeader + '<BR /> TOP 50 - Slow Queries <BR />' 
		SET @AlertSlowQueriesHeader = @AlertSlowQueriesHeader + '</font>'

		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------	 
		SET @AlertSlowQueriesTable = CAST( (    
			SELECT td =				[StartTime]		+ '</td>'
						+ '<td>' +  [DataBaseName]	+ '</td>'
						+ '<td>' +  [Duration]		+ '</td>'
						+ '<td>' +  [Reads]			+ '</td>'
						+ '<td>' +  [Writes]		+ '</td>'	
						+ '<td>' +  [CPU]			+ '</td>'	
						+ '<td>' +  [TextData]		+ '</td>'
			FROM (  
					-- Dados da Tabela do EMAIL
					SELECT	TOP 50
							CONVERT(VARCHAR(20), [StartTime], 120)	AS [StartTime], 
							[DataBaseName], 
							CAST([Duration] AS VARCHAR)				AS [Duration],
							CAST([Reads] AS VARCHAR)				AS [Reads],
							CAST([Writes] AS VARCHAR)				AS [Writes],
							CAST([CPU] AS VARCHAR)					AS [CPU],
							SUBSTRING([TextData], 1, 150)			AS [TextData]
					FROM #Slow_Queries_Temp
					ORDER BY [Duration] DESC
					
				  ) AS D ORDER BY CAST([Duration] AS NUMERIC(15,2)) DESC
		  FOR XML PATH( 'tr' )) AS VARCHAR(MAX) 
		)   
		      
		-- Corrige a Formatação da Tabela
		SET @AlertSlowQueriesTable = REPLACE( REPLACE( REPLACE( @AlertSlowQueriesTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
		    
		-- Títulos da Tabela do EMAIL
		SET @AlertSlowQueriesTable = 
				'<table cellspacing="2" cellpadding="5" border="3">'    
				+	'<tr>
						<th bgcolor=#0B0B61 width="100"><font color=white>StartTime</font></th>
						<th bgcolor=#0B0B61 width="50"><font color=white>Database Name</font></th>
						<th bgcolor=#0B0B61 width="70"><font color=white>Duration</font></th>				  
						<th bgcolor=#0B0B61 width="70"><font color=white>Reads</font></th>
						<th bgcolor=#0B0B61 width="70"><font color=white>Writes</font></th>
						<th bgcolor=#0B0B61 width="70"><font color=white>CPU</font></th>
						<th bgcolor=#0B0B61 width="300"><font color=white>TextData (150 initial characters)</font></th>				  
					</tr>'    
				+ REPLACE( REPLACE( @AlertSlowQueriesTable, '&lt;', '<'), '&gt;', '>')
				+ '</table>' 
				
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
								
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'

		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: There are ' + CAST(@Count_Slow_Queries AS VARCHAR) + ' Slow Queries in the last 5 minutes in the Server: ' + @@SERVERNAME,
				@EmailBody =	@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail +
								@AlertSlowQueriesHeader + @EmptyBodyEmail + @AlertSlowQueriesTable + @EmptyBodyEmail
				
		/***********************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		***********************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'

		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance
	END
END

GO
/****** Object:  StoredProcedure [dbo].[usp_SQL_Server_Connection]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: CONEXAO SQL SERVER
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_SQL_Server_Connection]
AS
BEGIN
	SET NOCOUNT ON

	-- Conexões SQL Server
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'SQL Server Connection')

	-- Declara as variaveis
	DECLARE @Current_Date DATETIME, @EmailBody VARCHAR(MAX), @AlertConnectionSQLServerHeader VARCHAR(MAX), @AlertConnectionSQLServerTable VARCHAR(MAX), 
			@EmptyBodyEmail VARCHAR(MAX), @Importance AS VARCHAR(6), @Subject VARCHAR(500), @Qty_Connections INT, @Connection_SQLServer_Parameter INT, 
			@Type INT, @EmailDestination VARCHAR(500), @AlertConnectionProcessesExecHeader VARCHAR(MAX), @AlertConnectionProcessesExecTable VARCHAR(MAX),
			@ProfileEmail VARCHAR(200)

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@Connection_SQLServer_Parameter = Parameter_Value,	-- Quantidade
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Conexões SQL Server

	SELECT @Qty_Connections = count(*) FROM sys.dm_exec_sessions WHERE session_id > 50

	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA
	SELECT @Type = [Type]
	FROM [dbo].[Alerts]
	WHERE [Id] = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )

	--------------------------------------------------------------------------------------------------------------------------------
	--	Cria Tabela para armazenar os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
		
	CREATE TABLE #WhoIsActive_Result (		
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),		
		[sql_command]			XML		
	)   
      
	-- Seta a hora atual
	SELECT @Current_Date = GETDATE()

	--------------------------------------------------------------------------------------------------------------------------------
	--	Carrega os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Retorna todos os processos que estão sendo executados no momento
	EXEC [dbo].[sp_whoisactive]
			@get_outer_command =	1,
			@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
			@destination_table =	'#WhoIsActive_Result'
				    
	-- Altera a coluna que possui o comando SQL
	ALTER TABLE #WhoIsActive_Result
	ALTER COLUMN [sql_command] VARCHAR(MAX)
	
	UPDATE #WhoIsActive_Result
	SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
	
	-- select * from #WhoIsActive_Result
	
	-- Verifica se não existe nenhum processo em Execução
	IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
	BEGIN
		INSERT INTO #WhoIsActive_Result
		SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
	END
	
	/*******************************************************************************************************************************
	--	Verifica se o limite de conexões para o Alerta foi atingido
	*******************************************************************************************************************************/
	IF (@Qty_Connections > @Connection_SQLServer_Parameter)
	BEGIN	-- INICIO - ALERTA		
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
					
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - CONEXÕES - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertConnectionSQLServerHeader = '<font color=black bold=true size=5>'				            
		SET @AlertConnectionSQLServerHeader = @AlertConnectionSQLServerHeader + '<BR /> TOP 25 - Open Connections on SQL Server <BR />' 
		SET @AlertConnectionSQLServerHeader = @AlertConnectionSQLServerHeader + '</font>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - CONEXÕES - BODY 
		--------------------------------------------------------------------------------------------------------------------------------
		if object_id('tempdb..#OpenConnections') is not null
			drop table #OpenConnections

		SELECT	TOP 25 IDENTITY(INT, 1, 1) AS id, 
				replace(replace(ec.client_net_address,'<',''),'>','') client_net_address, 
				case when es.[program_name] = '' then 'No Application Name provided in the connection string' else [program_name] end [program_name], 
				es.[host_name], es.login_name, /*db_name(database_id)*/ '' Base,
				COUNT(ec.session_id)  AS [connection count] 
		into #OpenConnections
		FROM sys.dm_exec_sessions AS es  
		INNER JOIN sys.dm_exec_connections AS ec ON es.session_id = ec.session_id   
		GROUP BY ec.client_net_address, es.[program_name], es.[host_name],/*db_name(database_id),*/ es.login_name  			
		order by [connection count] desc
				
		SET @AlertConnectionSQLServerTable = CAST( (    
			SELECT td =		client_net_address	+ '</td>' 
				+ '<td>' +  [program_name]		+ '</td>'
				+ '<td>' +  [host_name]			+ '</td>'
				+ '<td>' +  login_name			+ '</td>'
				+ '<td>' +  Base				+ '</td>'
				+ '<td>' +  [connection count] 	+ '</td>'			

			FROM (
					SELECT	client_net_address, 
							[program_name], 
							[host_name], login_name, Base,
							cast([connection count] as varchar) [connection count] ,id
					FROM #OpenConnections 		
					
					) AS D ORDER BY id 
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
		)
		
		-- Corrige a Formatação da Tabela
		SET @AlertConnectionSQLServerTable = REPLACE( REPLACE( REPLACE( @AlertConnectionSQLServerTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
		
		-- Títulos da Tabela do EMAIL
		SET @AlertConnectionSQLServerTable = 
				'<table cellspacing="2" cellpadding="5" border="3">'
				+	'<tr>
						<th bgcolor=#0B0B61 width="50"><font color=white>IP Address</font></th>
						<th bgcolor=#0B0B61 width="50"><font color=white>Application Name</font></th>
						<th bgcolor=#0B0B61 width="50"><font color=white>Hostname</font></th>
						<th bgcolor=#0B0B61 width="50"><font color=white>Login</font></th>
						<th bgcolor=#0B0B61 width="50"><font color=white>Database</font></th>
						<th bgcolor=#0B0B61 width="10"><font color=white>Number of Connections</font></th>
					</tr>'    
				+ REPLACE( REPLACE( @AlertConnectionSQLServerTable, '&lt;', '<'), '&gt;', '>')
				+ '</table>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertConnectionProcessesExecHeader = '<font color=black bold=true size=5>'			            
			SET @AlertConnectionProcessesExecHeader = @AlertConnectionProcessesExecHeader + '<BR /> TOP 50 - Processes being executed in the instance <BR />'
			SET @AlertConnectionProcessesExecHeader = @AlertConnectionProcessesExecHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertConnectionProcessesExecTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						ORDER BY [start_time]

					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertConnectionProcessesExecTable = REPLACE( REPLACE( REPLACE( @AlertConnectionProcessesExecTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertConnectionProcessesExecTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertConnectionProcessesExecTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			              
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
				
		
		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: There are ' + cast(@Qty_Connections as varchar) + ' Open Connections on SQL Server: ' + @@SERVERNAME,
				@EmailBody =	@AlertConnectionSQLServerHeader + @EmptyBodyEmail + @AlertConnectionSQLServerTable + @EmptyBodyEmail + 
								@AlertConnectionProcessesExecHeader + @EmptyBodyEmail + @AlertConnectionProcessesExecTable + @EmptyBodyEmail
				
		/*******************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients = @EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

   		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/		
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR		
		IF @Type = 1
		BEGIN
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
					
			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertConnectionSQLServerHeader = '<font color=black bold=true size=5>'				            
			SET @AlertConnectionSQLServerHeader = @AlertConnectionSQLServerHeader + '<BR /> Open Connections on SQL Server <BR />' 
			SET @AlertConnectionSQLServerHeader = @AlertConnectionSQLServerHeader + '</font>'
		
			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY 
			--------------------------------------------------------------------------------------------------------------------------------		

			if object_id('tempdb..#OpenConnections_Clear') is not null
				drop table #OpenConnections_Clear

			SELECT	top 25 IDENTITY(INT, 1, 1) AS id, 
					replace(replace(ec.client_net_address,'<',''),'>','') client_net_address, 
					case when es.[program_name] = '' then 'No Application Name provided in the connection string' else [program_name] end [program_name], 
					es.[host_name], es.login_name, /*db_name(database_id)*/ '' [Database],
					COUNT(ec.session_id)  AS [connection count] 
			into #OpenConnections_Clear
			FROM sys.dm_exec_sessions AS es  
			INNER JOIN sys.dm_exec_connections AS ec  
			ON es.session_id = ec.session_id   
			GROUP BY ec.client_net_address, es.[program_name], es.[host_name],/*db_name(database_id),*/ es.login_name  			
			order by [connection count] desc
		
			SET @AlertConnectionSQLServerTable = CAST( (    
				SELECT td =  client_net_address + '</td>' 
				+ '<td>' +  [program_name]			+ '</td>'
				+ '<td>' +  [host_name]			+ '</td>'
				+ '<td>' +  login_name			+ '</td>'
				+ '<td>' +  [Database]			+ '</td>'
				+ '<td>' +  [connection count] 			+ '</td>'			

				FROM (
						SELECT client_net_address, 
						[program_name], 
						[host_name], login_name, [Database],
						cast([connection count] as varchar) [connection count] ,id
						FROM #OpenConnections_Clear 		
					
					  ) AS D ORDER BY id 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)  
		
			-- Corrige a Formatação da Tabela
			SET @AlertConnectionSQLServerTable = REPLACE( REPLACE( REPLACE( @AlertConnectionSQLServerTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
		
			-- Títulos da Tabela do EMAIL
			SET @AlertConnectionSQLServerTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'
					+	'<tr>
							<th bgcolor=#0B0B61 width="50"><font color=white>IP Address</font></th>
							<th bgcolor=#0B0B61 width="50"><font color=white>Application Name</font></th>
							<th bgcolor=#0B0B61 width="50"><font color=white>Hostname</font></th>
							<th bgcolor=#0B0B61 width="50"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="50"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="10"><font color=white>Number of Connections</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertConnectionSQLServerTable, '&lt;', '<'), '&gt;', '>')
					+ '</table>'
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertConnectionProcessesExecHeader = '<font color=black bold=true size=5>'			            
			SET @AlertConnectionProcessesExecHeader = @AlertConnectionProcessesExecHeader + '<BR /> TOP 50 - Processes being executed in the instance <BR />'
			SET @AlertConnectionProcessesExecHeader = @AlertConnectionProcessesExecHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertConnectionProcessesExecTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						ORDER BY [start_time]

					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertConnectionProcessesExecTable = REPLACE( REPLACE( REPLACE( @AlertConnectionProcessesExecTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertConnectionProcessesExecTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertConnectionProcessesExecTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			              
		
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'
		
			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: There are ' + cast(@Qty_Connections as varchar) + ' Open Connections on SQL Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertConnectionSQLServerHeader + @EmptyBodyEmail + @AlertConnectionSQLServerTable + @EmptyBodyEmail+ 
									@AlertConnectionProcessesExecHeader + @EmptyBodyEmail + @AlertConnectionProcessesExecTable + @EmptyBodyEmail
				
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients = @EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance

   			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
			*******************************************************************************************************************************/		
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 0		
		END
	END		-- FIM - CLEAR
END

GO
/****** Object:  StoredProcedure [dbo].[usp_SQL_Server_Restarted_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*******************************************************************************************************************************
--	ALERTA: SQL Server Restarted
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_SQL_Server_Restarted_Alert]
AS
BEGIN
	SET NOCOUNT ON

	-- SQL Server Restarted
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'SQL Server Restarted')

	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	DECLARE @SQL_Restarted_Parameter INT, @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	SELECT	@SQL_Restarted_Parameter = Parameter_Value,		-- Minutes
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- SQL Server Restarted

	-- Verifica se o SQL Server foi Restarted
	IF ( OBJECT_ID('tempdb..#Alert_SQL_Restarted') IS NOT NULL ) 
		DROP TABLE #Alert_SQL_Restarted
	
	SELECT [create_date]
	INTO #Alert_SQL_Restarted
	FROM [sys].[databases] WITH(NOLOCK)
	WHERE	[database_id] = 2 -- Verifica a Database "TempDb"
			AND [create_date] >= DATEADD(MINUTE, -@SQL_Restarted_Parameter, GETDATE())
	
	/*******************************************************************************************************************************
	--	Verifica se o SQL foi Restarted
	*******************************************************************************************************************************/
	IF EXISTS( SELECT * FROM #Alert_SQL_Restarted )
	BEGIN
		/*******************************************************************************************************************************
		--	CRIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		-- Declara as variaveis
		DECLARE @EmailBody VARCHAR(MAX), @AlertJobHeader VARCHAR(MAX), @AlertaSQLRestarted VARCHAR(MAX), 
				@EmptyBodyEmail VARCHAR(MAX), @Importance AS VARCHAR(6), @Subject VARCHAR(500)
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - HEADER
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertJobHeader = '<font color=black bold=true size= 5>'
		SET @AlertJobHeader = @AlertJobHeader + '<BR /> SQL Server has been restarted in the last ' +  CAST((@SQL_Restarted_Parameter) AS VARCHAR) + ' minutes <BR />'
		SET @AlertJobHeader = @AlertJobHeader + '</font>'
		
		--------------------------------------------------------------------------------------------------------------------------------
		--	ALERTA - BODY
		--------------------------------------------------------------------------------------------------------------------------------
		SET @AlertaSQLRestarted = CAST( (
			SELECT td =  [Create_Date] + '</td>'
			FROM (      
					-- Dados da Tabela do EMAIL
					SELECT CONVERT(VARCHAR(20), [create_date], 120) AS [Create_Date]
					FROM #Alert_SQL_Restarted
		
				  ) AS D
			FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
		)
		
		-- Corrige a Formatação da Tabela
		SET @AlertaSQLRestarted = REPLACE( REPLACE( REPLACE( @AlertaSQLRestarted, '&lt;', '<' ), '&gt;', '>' ), '<td>', '<td align = center>')
		
		-- Títulos da Tabela do EMAIL
		SET @AlertaSQLRestarted =	
				'<table cellspacing="2" cellpadding="5" border="3">'
				+	'<tr>
						<th width="400" bgcolor=#0B0B61><font color=white>Restart Time</font></th>
					 </tr>'
				+ REPLACE( REPLACE( @AlertaSQLRestarted, '&lt;', '<' ), '&gt;', '>' )
				+ '</table>'
			
		--------------------------------------------------------------------------------------------------------------------------------
		-- Insere um Espaço em Branco no EMAIL
		--------------------------------------------------------------------------------------------------------------------------------
		SET @EmptyBodyEmail =	''
		SET @EmptyBodyEmail =
				'<table cellpadding="5" cellspacing="5" border="0">' +
					'<tr>
						<th width="500">               </th>
					</tr>'
					+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
				+ '</table>'
		
		/*******************************************************************************************************************************
		--	Seta as Variáveis do EMAIL
		*******************************************************************************************************************************/
		SELECT	@Importance =	'High',
				@Subject =  'ALERT: SQL Server has been restarted in the last ' +  CAST((@SQL_Restarted_Parameter) AS VARCHAR) + ' minutes in the server: ' + @@SERVERNAME,
				@EmailBody =	@AlertJobHeader + @EmptyBodyEmail + @AlertaSQLRestarted + @EmptyBodyEmail
		
		/*******************************************************************************************************************************
		-- Inclui uma imagem com link para o site do Fabricio Lima
		*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
		
		/*******************************************************************************************************************************
		--	ENVIA O EMAIL - ALERTA
		*******************************************************************************************************************************/
		EXEC [msdb].[dbo].[sp_send_dbmail]
				@profile_name = @ProfileEmail,
				@recipients =	@EmailDestination,
				@subject =		@Subject,
				@body =			@EmailBody,
				@body_format =	'HTML',
				@importance =	@Importance

		/*******************************************************************************************************************************
		-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
		*******************************************************************************************************************************/
		INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
		SELECT @Id_Alert_Parameter, @Subject, 1
	END
END

GO
/****** Object:  StoredProcedure [dbo].[usp_Tempdb_Utilization_Alert]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/*******************************************************************************************************************************
--	ALERTA: TEMPDB UTILIZACAO ARQUIVO MDF
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_Tempdb_Utilization_Alert]
AS
BEGIN
	SET NOCOUNT ON

	-- Tempdb Size
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Tempdb Utilization')

	declare @Connection_Time_Hours tinyint, @Tempdb_Parameter int, @EmailDestination VARCHAR(500), @Tempdb_size INT, @ProfileEmail VARCHAR(200)
	
	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@Tempdb_Parameter = Parameter_Value,				-- Percentual
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].[Alert_Parameters]
	WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter		-- Tempdb Utilizacao Arquivo

	-- Conexões mais antigas que 1 hora
	SELECT	@Connection_Time_Hours = 1,
			@Tempdb_size = 10000		--	10 GB
				
	-- Declara as variaveis
	DECLARE	@Subject VARCHAR(500), @Type TINYINT, @Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @AlertSizeTempdbHeader VARCHAR(MAX), 
			@AlertSizeTempdbTable VARCHAR(MAX), @AlertTempdbFileUtilizationHeader VARCHAR(MAX), @AlertSizeTempdbConectionsTable VARCHAR(MAX), 
			@EmptyBodyEmail VARCHAR(MAX), @AlertTempdbProcessExecHeader VARCHAR(MAX), @AlertTempdbProcessExecTable VARCHAR(MAX), @Current_Date DATETIME

	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA
	SELECT @Type = [Type]
	FROM [dbo].[Alerts]
	WHERE [Id] = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )
	
	-- Busca as informações do Tempdb
	IF ( OBJECT_ID('tempdb..#Alert_Size_Tempdb') IS NOT NULL )
		DROP TABLE #Alert_Size_Tempdb

	select 
		file_id,
		reserved_MB = CAST((unallocated_extent_page_count+version_store_reserved_page_count+user_object_reserved_page_count +
							internal_object_reserved_page_count+mixed_extent_page_count)*8/1024. AS numeric(15,2)) ,
		unallocated_extent_MB = CAST(unallocated_extent_page_count*8/1024. AS NUMERIC(15,2)),
		internal_object_reserved_MB = CAST(internal_object_reserved_page_count*8/1024. AS NUMERIC(15,2)),
		version_store_reserved_MB = CAST(version_store_reserved_page_count*8/1024. AS NUMERIC(15,2)),
		user_object_reserved_MB = convert(numeric(10,2),round(user_object_reserved_page_count*8/1024.,2))
	into #Alert_Size_Tempdb
	from tempdb.sys.dm_db_file_space_usage
	
	IF ( OBJECT_ID('tempdb..#Alert_Size_Tempdb_Conections') IS NOT NULL )
		DROP TABLE #Alert_Size_Tempdb_Conections

	-- Busca as transações que estão abertas
	CREATE TABLE #Alert_Size_Tempdb_Conections(
		[session_id] [smallint] NULL,
		[login_time] [varchar](40) NULL,
		[login_name] [nvarchar](128) NULL,
		[host_name] [nvarchar](128) NULL,
		[open_transaction_Count] [int] NULL,
		[status] [nvarchar](30) NULL,
		[cpu_time] [int] NULL,
		[total_elapsed_time] [int] NULL,
		[reads] [bigint] NULL,
		[writes] [bigint] NULL,
		[logical_reads] [bigint] NULL
	) ON [PRIMARY]

	-- Query Alerta Tempdb - Conexões abertas - Incluir no Alerta TempDb
	INSERT INTO #Alert_Size_Tempdb_Conections
	SELECT	TOP 50 session_id, convert(varchar(20),login_time,120) AS login_time, login_name, host_name, 
			/*open_transaction_Count,*/ NULL, status, cpu_time, total_elapsed_time, reads, writes, logical_reads	
	FROM sys.dm_exec_sessions
	WHERE	session_id > 50 
			--and open_transaction_Count > 0
			and dateadd(hour,-@Connection_Time_Hours,getdate()) > login_time
	ORDER BY logical_reads DESC			
			
	-- Tratamento caso não retorne nenhuma conexão
	IF NOT EXISTS (SELECT TOP 1 session_id FROM #Alert_Size_Tempdb_Conections)
	BEGIN
		INSERT INTO #Alert_Size_Tempdb_Conections
		VALUES(NULL, 'No open connections for more than 1 hour', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
	END
	
	--------------------------------------------------------------------------------------------------------------------------------
	--	Cria Tabela para armazenar os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
		
	CREATE TABLE #WhoIsActive_Result (		
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),		
		[sql_command]			XML		
	)   
      
	-- Seta a hora atual
	SELECT @Current_Date = GETDATE()

	--------------------------------------------------------------------------------------------------------------------------------
	--	Carrega os Dados da sp_whoisactive
	--------------------------------------------------------------------------------------------------------------------------------
	-- Retorna todos os processos que estão sendo executados no momento
	EXEC [dbo].[sp_whoisactive]
			@get_outer_command =	1,
			@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
			@destination_table =	'#WhoIsActive_Result'
				    
	-- Altera a coluna que possui o comando SQL
	ALTER TABLE #WhoIsActive_Result
	ALTER COLUMN [sql_command] VARCHAR(MAX)
	
	UPDATE #WhoIsActive_Result
	SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
	
	-- select * from #WhoIsActive_Result
	
	-- Verifica se não existe nenhum processo em Execução
	IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
	BEGIN
		INSERT INTO #WhoIsActive_Result
		SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
	END
	
	/*******************************************************************************************************************************
	--	Verifica se o Consumo do Arquivo do Tempdb está muito grande
	*******************************************************************************************************************************/
	IF EXISTS	(
					select TOP 1 unallocated_extent_MB 
					from #Alert_Size_Tempdb
					where	reserved_MB > @Tempdb_size 
							and unallocated_extent_MB < reserved_MB * (1 - (@Tempdb_Parameter / 100.0))
				)

	BEGIN	-- INICIO - ALERTA				
		IF ISNULL(@Type, 0) = 0	-- Envia o Alerta apenas uma vez
		BEGIN
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - ALERTA - Tempdb Size
			*******************************************************************************************************************************/
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertSizeTempdbHeader = '<font color=black bold=true size=5>'			            
			SET @AlertSizeTempdbHeader = @AlertSizeTempdbHeader + '<BR /> Tempdb Size <BR />' 
			SET @AlertSizeTempdbHeader = @AlertSizeTempdbHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertSizeTempdbTable = CAST( (    
				SELECT td =				CAST(file_id AS VARCHAR)						+ '</td>'
							+ '<td>' +  CAST(reserved_MB AS VARCHAR)					+ '</td>'
							+ '<td>' +  CAST(Percentage_Used AS VARCHAR)					+ '</td>'	
							+ '<td>' +  CAST(unallocated_extent_MB AS VARCHAR)			+ '</td>'
							+ '<td>' +  CAST(internal_object_reserved_MB AS VARCHAR)	+ '</td>'
							+ '<td>' +  CAST(version_store_reserved_MB AS VARCHAR)		+ '</td>'
							+ '<td>' +  CAST(user_object_reserved_MB AS VARCHAR)		+ '</td>'
				FROM (  
						-- Dados da Tabela do EMAIL
						select	file_id, 
								reserved_MB,
								CAST( ((1 - (unallocated_extent_MB / reserved_MB)) * 100) AS NUMERIC(15,2)) AS Percentage_Used,
								unallocated_extent_MB,
								internal_object_reserved_MB,
								version_store_reserved_MB,
								user_object_reserved_MB 
						from #Alert_Size_Tempdb
						
					  ) AS D 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)
						      
			-- Corrige a Formatação da Tabela
			SET @AlertSizeTempdbTable = REPLACE( REPLACE( REPLACE( @AlertSizeTempdbTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertSizeTempdbTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>File ID</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Reserved Space (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Percentage Used (%)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Unallocated Space (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Internal Object Reserved (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Version Store Reserved (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>User Object Reserved (MB)</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertSizeTempdbTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'					
			      
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - ALERTA - CONEXOES COM TRANSACAO ABERTA
			*******************************************************************************************************************************/
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbFileUtilizationHeader = '<font color=black bold=true size=5>'			            
			SET @AlertTempdbFileUtilizationHeader = @AlertTempdbFileUtilizationHeader + '<BR /> TOP 50 - Connections with Open Transaction <BR />' 
			SET @AlertTempdbFileUtilizationHeader = @AlertTempdbFileUtilizationHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertSizeTempdbConectionsTable = CAST( (    
				SELECT td =				session_id				+ '</td>'					 
							+ '<td>' +  login_time				+ '</td>'
							+ '<td>' +  login_name				+ '</td>'
							+ '<td>' +  host_name				+ '</td>'
							+ '<td>' +  open_transaction_Count	+ '</td>'
							+ '<td>' +	status					+ '</td>'
							+ '<td>' +  cpu_time				+ '</td>'
							+ '<td>' +  total_elapsed_time		+ '</td>'
							+ '<td>' +  reads 					+ '</td>'
							+ '<td>' +  writes 					+ '</td>'
							+ '<td>' +  logical_reads			+ '</td>'
				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL(CAST(session_id AS VARCHAR), '-') AS session_id, 
								ISNULL(login_time, '-') AS login_time, 
								ISNULL(login_name, '-') AS login_name,
								ISNULL(host_name, '-') AS host_name,
								ISNULL(CAST(open_transaction_Count AS VARCHAR),'-') AS open_transaction_Count, 
								ISNULL(status, '-') AS status, 
								ISNULL(CAST(cpu_time AS VARCHAR),'-') AS cpu_time, 
								ISNULL(CAST(total_elapsed_time AS VARCHAR),'-') AS total_elapsed_time, 
								ISNULL(CAST(reads AS VARCHAR),'-') AS reads, 
								ISNULL(CAST(writes AS VARCHAR),'-') AS writes, 
								ISNULL(CAST(logical_reads AS VARCHAR),'-') AS logical_reads
						FROM #Alert_Size_Tempdb_Conections
						 						
					  ) AS D ORDER BY CAST(REPLACE([logical_reads], '-', 0) AS BIGINT) DESC
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertSizeTempdbConectionsTable = REPLACE( REPLACE( REPLACE( @AlertSizeTempdbConectionsTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertSizeTempdbConectionsTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="100"><font color=white>session_id</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>login_time</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>login_name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>host_name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>open_transaction_Count</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>status</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>cpu_time</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>total_elapsed_time</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>reads</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>writes</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>logical_reads</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertSizeTempdbConectionsTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbProcessExecHeader = '<font color=black bold=true size=5>'			            
			SET @AlertTempdbProcessExecHeader = @AlertTempdbProcessExecHeader + '<BR /> TOP 50 - Processes being executed in the instance <BR />'
			SET @AlertTempdbProcessExecHeader = @AlertTempdbProcessExecHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbProcessExecTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						ORDER BY [start_time]

					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertTempdbProcessExecTable = REPLACE( REPLACE( REPLACE( @AlertTempdbProcessExecTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertTempdbProcessExecTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertTempdbProcessExecTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'

			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/			              
			SELECT	@Importance =	'High',
					@Subject =		'ALERT: The Tempdb size is above of 70% in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertSizeTempdbHeader + @EmptyBodyEmail + @AlertSizeTempdbTable + @EmptyBodyEmail +
									@AlertTempdbFileUtilizationHeader + @EmptyBodyEmail + @AlertSizeTempdbConectionsTable + @EmptyBodyEmail +
									@AlertTempdbProcessExecHeader + @EmptyBodyEmail + @AlertTempdbProcessExecTable + @EmptyBodyEmail
			
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
			
			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - ALERT
			*******************************************************************************************************************************/	
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
					
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 1			
		END
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR		
		IF @Type = 1
		BEGIN
			/*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR - Tempdb Size
			*******************************************************************************************************************************/

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertSizeTempdbHeader = '<font color=black bold=true size=5>'			            
			SET @AlertSizeTempdbHeader = @AlertSizeTempdbHeader + '<BR /> Tempdb Size <BR />' 
			SET @AlertSizeTempdbHeader = @AlertSizeTempdbHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			-------------------------------------------------------------------------------------------------------------------------------- 
			SET @AlertSizeTempdbTable = CAST( (    
				SELECT td =				CAST(file_id AS VARCHAR)						+ '</td>'
							+ '<td>' +  CAST(reserved_MB AS VARCHAR)					+ '</td>'
							+ '<td>' +  CAST(Percentage_Used AS VARCHAR)					+ '</td>'					 
							+ '<td>' +  CAST(unallocated_extent_MB AS VARCHAR)			+ '</td>'
							+ '<td>' +  CAST(internal_object_reserved_MB AS VARCHAR)	+ '</td>'
							+ '<td>' +  CAST(version_store_reserved_MB AS VARCHAR)		+ '</td>'
							+ '<td>' +  CAST(user_object_reserved_MB AS VARCHAR)		+ '</td>'
				FROM (  
						-- Dados da Tabela do EMAIL
						select	file_id,
								reserved_MB,
								CAST( ((1 - (unallocated_extent_MB / reserved_MB)) * 100) AS NUMERIC(15,2)) AS Percentage_Used,
								unallocated_extent_MB,
								internal_object_reserved_MB,
								version_store_reserved_MB,
								user_object_reserved_MB 
						from #Alert_Size_Tempdb
						
					  ) AS D 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			) 
			      
			-- Corrige a Formatação da Tabela
			SET @AlertSizeTempdbTable = REPLACE( REPLACE( REPLACE( @AlertSizeTempdbTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertSizeTempdbTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>File ID</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Reserved Space (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Percentage Used (%)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Unallocated Space (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Internal Object Reserved (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Version Store Reserved (MB)</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>User Object Reserved (MB)</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertSizeTempdbTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			 
			 /*******************************************************************************************************************************
			--	CRIA O EMAIL - CLEAR - CONEXOES COM TRANSACAO ABERTA
			*******************************************************************************************************************************/
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbFileUtilizationHeader = '<font color=black bold=true size=5>'			            
			SET @AlertTempdbFileUtilizationHeader = @AlertTempdbFileUtilizationHeader + '<BR /> TOP 50 - Connections with Open Transaction <BR />' 
			SET @AlertTempdbFileUtilizationHeader = @AlertTempdbFileUtilizationHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertSizeTempdbConectionsTable = CAST( (    
				SELECT td =				session_id				+ '</td>'					 
							+ '<td>' +  login_time				+ '</td>'
							+ '<td>' +  login_name				+ '</td>'
							+ '<td>' +  host_name				+ '</td>'
							+ '<td>' +  open_transaction_Count	+ '</td>'
							+ '<td>' +	status					+ '</td>'
							+ '<td>' +  cpu_time				+ '</td>'
							+ '<td>' +  total_elapsed_time		+ '</td>'
							+ '<td>' +  reads 					+ '</td>'
							+ '<td>' +  writes 					+ '</td>'
							+ '<td>' +  logical_reads			+ '</td>'
				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL(CAST(session_id AS VARCHAR), '-') AS session_id, 
								ISNULL(login_time, '-') AS login_time, 
								ISNULL(login_name, '-') AS login_name,
								ISNULL(host_name, '-') AS host_name,
								ISNULL(CAST(open_transaction_Count AS VARCHAR),'-') AS open_transaction_Count, 
								ISNULL(status, '-') AS status, 
								ISNULL(CAST(cpu_time AS VARCHAR),'-') AS cpu_time, 
								ISNULL(CAST(total_elapsed_time AS VARCHAR),'-') AS total_elapsed_time, 
								ISNULL(CAST(reads AS VARCHAR),'-') AS reads, 
								ISNULL(CAST(writes AS VARCHAR),'-') AS writes, 
								ISNULL(CAST(logical_reads AS VARCHAR),'-') AS logical_reads
						FROM #Alert_Size_Tempdb_Conections
						
					  ) AS D ORDER BY CAST(REPLACE([logical_reads], '-', 0) AS BIGINT) DESC
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertSizeTempdbConectionsTable = REPLACE( REPLACE( REPLACE( @AlertSizeTempdbConectionsTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertSizeTempdbConectionsTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="100"><font color=white>session_id</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>login_time</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>login_name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>host_name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>open_transaction_Count</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>status</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>cpu_time</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>total_elapsed_time</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>reads</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>writes</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>logical_reads</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertSizeTempdbConectionsTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbProcessExecHeader = '<font color=black bold=true size=5>'			            
			SET @AlertTempdbProcessExecHeader = @AlertTempdbProcessExecHeader + '<BR /> TOP 50 - Processes being executed in the instance <BR />'
			SET @AlertTempdbProcessExecHeader = @AlertTempdbProcessExecHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertTempdbProcessExecTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	TOP 50
								ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
						ORDER BY [start_time]

					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			)   
			      
			-- Corrige a Formatação da Tabela
			SET @AlertTempdbProcessExecTable = REPLACE( REPLACE( REPLACE( @AlertTempdbProcessExecTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertTempdbProcessExecTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="300"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @AlertTempdbProcessExecTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'

			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'

			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: The Tempdb size is under 70% in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertSizeTempdbHeader + @EmptyBodyEmail + @AlertSizeTempdbTable + @EmptyBodyEmail +
									@AlertTempdbFileUtilizationHeader + @EmptyBodyEmail + @AlertSizeTempdbConectionsTable + @EmptyBodyEmail+
									@AlertTempdbProcessExecHeader + @EmptyBodyEmail + @AlertTempdbProcessExecTable + @EmptyBodyEmail
			
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
			
			/*******************************************************************************************************************************
			--	ENVIA O EMAIL - CLEAR
			*******************************************************************************************************************************/
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
			
			/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 0 : CLEAR
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( [Id_Alert_Parameter], [Alert_Message], [Type] )
			SELECT @Id_Alert_Parameter, @Subject, 0		
		END
	END		-- FIM - CLEAR
END
GO
/****** Object:  StoredProcedure [dbo].[usp_transaction_log_full]    Script Date: 6/3/2018 4:13:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




/*******************************************************************************************************************************
--	ALERT: TRANSACTION LOG FULL
*******************************************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_transaction_log_full]
AS
BEGIN
	SET NOCOUNT ON

	-- Arquivo de Log Full
	DECLARE @Id_Alert_Parameter INT = (SELECT Id_Alert_Parameter FROM [dbo].Alert_Parameters (NOLOCK) WHERE Alert_Name = 'Transaction Log Full')
	
	-- Declara as variaveis
	DECLARE @Minimum_Log_Size INT, @AlertLogHeader VARCHAR(MAX), @AlertLogTable VARCHAR(MAX), @EmptyBodyEmail VARCHAR(MAX),
			@Importance AS VARCHAR(6), @EmailBody VARCHAR(MAX), @Subject VARCHAR(500), @Type TINYINT, @Log_Full_Parameter TINYINT,
			@WhoisactiveResultHeader VARCHAR(MAX), @WhoisactiveResultTable VARCHAR(MAX), @EmailDestination VARCHAR(500), @ProfileEmail VARCHAR(200)
	
	--------------------------------------------------------------------------------------------------------------------------------
	-- Recupera os parametros do Alerta
	--------------------------------------------------------------------------------------------------------------------------------
	SELECT	@Log_Full_Parameter = Parameter_Value,				-- Percentual
			@EmailDestination = Email,
			@ProfileEmail = Email_Profile
	FROM [dbo].Alert_Parameters
	WHERE Id_Alert_Parameter = @Id_Alert_Parameter		-- Arquivo de Log Full

	-- Seta as variaveis
	SELECT	@Minimum_Log_Size = 50000		-- 500 MB
	
	-- Verifica o último Tipo do Alerta registrado -> 0: CLEAR / 1: ALERTA	
	SELECT @Type = [Type]
	FROM [dbo].Alerts
	WHERE [Id] = (SELECT MAX(Id) FROM [dbo].[Alerts] WHERE [Id_Alert_Parameter] = @Id_Alert_Parameter )
	
	-- Cria a tabela que ira armazenar os dados dos processos
	IF ( OBJECT_ID('tempdb..#WhoIsActive_Result') IS NOT NULL )
		DROP TABLE #WhoIsActive_Result
				
	CREATE TABLE #WhoIsActive_Result (		
		[dd hh:mm:ss.mss]		VARCHAR(20),
		[database_name]			NVARCHAR(128),		
		[login_name]			NVARCHAR(128),
		[host_name]				NVARCHAR(128),
		[start_time]			DATETIME,
		[status]				VARCHAR(30),
		[session_id]			INT,
		[blocking_session_id]	INT,
		[wait_info]				VARCHAR(MAX),
		[open_tran_count]		INT,
		[CPU]					VARCHAR(MAX),
		[reads]					VARCHAR(MAX),
		[writes]				VARCHAR(MAX),
		[sql_command]			XML
	)

	-- Cria a tabela que ira armazenar os dados dos arquivos de log
	IF ( OBJECT_ID('tempdb..#Alert_Transaction_Log_Full') IS NOT NULL )
		DROP TABLE #Alert_Transaction_Log_Full

	SELECT	db.[name] AS [DatabaseName] ,
			CAST(ls.[cntr_value] / 1024.00 AS DECIMAL(18,2)) AS [cntr_value],
			CAST(	CAST(lu.[cntr_value] AS FLOAT) / 
					CASE WHEN CAST(ls.[cntr_value] AS FLOAT) = 0 
							THEN 1 
							ELSE CAST(ls.[cntr_value] AS FLOAT) 
					END AS DECIMAL(18,2)) * 100	AS [Percente_Log_Used] 
	INTO #Alert_Transaction_Log_Full
	FROM [sys].[databases] AS db
	JOIN [sys].[dm_os_performance_counters] AS lu  ON db.[name] = lu.[instance_name]
	JOIN [sys].[dm_os_performance_counters] AS ls  ON db.[name] = ls.[instance_name]
	WHERE	lu.[counter_name] LIKE 'Log File(s) Used Size (KB)%'
			AND ls.[counter_name] LIKE 'Log File(s) Size (KB)%'
			AND ls.[cntr_value] > @Minimum_Log_Size -- Maior que 100 MB
		
	/*******************************************************************************************************************************
	-- Verifica se existe algum LOG com muita utilização
	*******************************************************************************************************************************/
	IF EXISTS(
				SELECT	*
				FROM #Alert_Transaction_Log_Full
				WHERE	[Percente_Log_Used] > @Log_Full_Parameter
			 )
	BEGIN	-- INICIO - ALERTA
		IF ISNULL(@Type, 0) = 0	-- Envia o Alerta apenas uma vez
		BEGIN
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - DADOS - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			-- Retorna todos os processos que estão sendo executados no momento
			EXEC [dbo].[sp_whoisactive]
					@get_outer_command =	1,
					@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
					@destination_table =	'#WhoIsActive_Result'
						    
			-- Altera a coluna que possui o comando SQL
			ALTER TABLE #WhoIsActive_Result
			ALTER COLUMN [sql_command] VARCHAR(MAX)
						
			UPDATE #WhoIsActive_Result
			SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
			
			-- select * from #WhoIsActive_Result
			
			-- Verifica se não existe nenhum processo em Execução
			IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
			BEGIN
				INSERT INTO #WhoIsActive_Result
				SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
			END		
		
			/*******************************************************************************************************************************
			--	ALERTA - CRIA O EMAIL
			*******************************************************************************************************************************/

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER - LOG FULL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLogHeader = '<font color=black bold=true size= 5>'
			SET @AlertLogHeader = @AlertLogHeader + '<BR /> Transaction Log Information <BR />'
			SET @AlertLogHeader = @AlertLogHeader + '</font>'
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY - LOG FULL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLogTable = CAST( (    
				SELECT td =				[DatabaseName]							+ '</td>'
							+ '<td>' +	CAST([cntr_value] AS VARCHAR)			+ '</td>'
							+ '<td>' +	CAST([Percente_Log_Used] AS VARCHAR)	+ '</td>'
				FROM (	
						-- Dados da Tabela do EMAIL
						SELECT	[DatabaseName],
								[cntr_value],
								[Percente_Log_Used]
						FROM #Alert_Transaction_Log_Full
						WHERE	[Percente_Log_Used] > @Log_Full_Parameter

					  ) AS D ORDER BY [Percente_Log_Used] DESC
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			
			-- Corrige a Formatação da Tabela
			SET @AlertLogTable = REPLACE( REPLACE( REPLACE( @AlertLogTable, '&lt;', '<' ), '&gt;', '>' ), '<td>', '<td align=center>')
			
			-- Títulos da Tabela do EMAIL
			SET @AlertLogTable =
					'<table cellspacing="2" cellpadding="5" border="3">'
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Log Size (MB)</font></th> 
							<th bgcolor=#0B0B61 width="250"><font color=white>Log Used Percentage (%)</font></th>
						</tr>'
					+ REPLACE( REPLACE( @AlertLogTable, '&lt;', '<'), '&gt;', '>')
					+ '</table>'
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - HEADER - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instance <BR />'
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	ALERTA - BODY - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultTable = CAST( (
				SELECT td =				Duration				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS Duration, 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
				
					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			) 
			      
			-- Corrige a Formatação da Tabela
			SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @WhoisactiveResultTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
		
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'
			
			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =  'ALERT: There are one or more Transaction Log File with more than ' +  CAST((@Log_Full_Parameter) AS VARCHAR) + '% used in the server: ' + @@SERVERNAME,
					@EmailBody =	@AlertLogHeader + @EmptyBodyEmail + @AlertLogTable + @EmptyBodyEmail + 
									@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail
									
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
						
			/*******************************************************************************************************************************
			--	ALERTA - ENVIA O EMAIL
			*******************************************************************************************************************************/	
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
           	
           	/*******************************************************************************************************************************
			-- Insere um Registro na Tabela de Controle dos Alertas -> Fl_Tipo = 1 : ALERTA
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( Id_Alert_Parameter, Alert_Message, [type] )
			SELECT @Id_Alert_Parameter, @Subject, 1			
		END
	END		-- FIM - ALERTA
	ELSE 
	BEGIN	-- INICIO - CLEAR
		IF @Type = 1
		BEGIN
			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - DADOS - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------		      
			-- Retorna todos os processos que estão sendo executados no momento
			EXEC [dbo].[sp_whoisactive]
					@get_outer_command =	1,
					@output_column_list =	'[dd hh:mm:ss.mss][database_name][login_name][host_name][start_time][status][session_id][blocking_session_id][wait_info][open_tran_count][CPU][reads][writes][sql_command]',
					@destination_table =	'#WhoIsActive_Result'
						    
			-- Altera a coluna que possui o comando SQL
			ALTER TABLE #WhoIsActive_Result
			ALTER COLUMN [sql_command] VARCHAR(MAX)
			
			UPDATE #WhoIsActive_Result
			SET [sql_command] = REPLACE( REPLACE( REPLACE( REPLACE( CAST([sql_command] AS VARCHAR(1000)), '<?query --', ''), '--?>', ''), '&gt;', '>'), '&lt;', '')
			
			-- select * from #WhoIsActive_Result
			
			-- Verifica se não existe nenhum processo em Execução
			IF NOT EXISTS ( SELECT TOP 1 * FROM #WhoIsActive_Result )
			BEGIN
				INSERT INTO #WhoIsActive_Result
				SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
			END
		
			/*******************************************************************************************************************************
			--	CLEAR - CRIA O EMAIL
			*******************************************************************************************************************************/										

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLogHeader = '<font color=black bold=true size=5>'			            
			SET @AlertLogHeader = @AlertLogHeader + '<BR /> Transaction Log Information <BR />' 
			SET @AlertLogHeader = @AlertLogHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY
			--------------------------------------------------------------------------------------------------------------------------------
			SET @AlertLogTable = CAST( (    
				SELECT td =				[DatabaseName]							+ '</td>'
							+ '<td>' +	CAST([cntr_value] AS VARCHAR)			+ '</td>'
							+ '<td>' +	CAST([Percente_Log_Used] AS VARCHAR)	+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	[DatabaseName],
								[cntr_value],
								[Percente_Log_Used]
						FROM #Alert_Transaction_Log_Full
						 							 
					  ) AS D ORDER BY [Percente_Log_Used] DESC
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX) 
			)   
			
			-- Corrige a Formatação da Tabela
			SET @AlertLogTable = REPLACE( REPLACE( REPLACE( @AlertLogTable, '&lt;', '<' ), '&gt;', '>' ), '<td>', '<td align = center>')
			    
			-- Títulos da Tabela do EMAIL
			SET @AlertLogTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="200"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Log Size (MB)</font></th> 
							<th bgcolor=#0B0B61 width="250"><font color=white>Log Used Percentage (%)</font></th>          
						</tr>'    
					+ REPLACE( REPLACE( @AlertLogTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>' 
			
			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - HEADER - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultHeader = '<font color=black bold=true size=5>'			            
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '<BR /> Processes being executed in the instance <BR />'
			SET @WhoisactiveResultHeader = @WhoisactiveResultHeader + '</font>'

			--------------------------------------------------------------------------------------------------------------------------------
			--	CLEAR - BODY - WHOISACTIVE
			--------------------------------------------------------------------------------------------------------------------------------
			SET @WhoisactiveResultTable = CAST( (
				SELECT td =				[Duration]				+ '</td>'
							+ '<td>' +  [database_name]			+ '</td>'
							+ '<td>' +  [login_name]			+ '</td>'
							+ '<td>' +  [host_name]				+ '</td>'
							+ '<td>' +  [start_time]			+ '</td>'
							+ '<td>' +  [status]				+ '</td>'
							+ '<td>' +  [session_id]			+ '</td>'
							+ '<td>' +  [blocking_session_id]	+ '</td>'
							+ '<td>' +  [Wait]					+ '</td>'
							+ '<td>' +  [open_tran_count]		+ '</td>'
							+ '<td>' +  [CPU]					+ '</td>'
							+ '<td>' +  [reads]					+ '</td>'
							+ '<td>' +  [writes]				+ '</td>'
							+ '<td>' +  [sql_command]			+ '</td>'

				FROM (  
						-- Dados da Tabela do EMAIL
						SELECT	ISNULL([dd hh:mm:ss.mss], '-')							AS [Duration], 
								ISNULL([database_name], '-')							AS [database_name],
								ISNULL([login_name], '-')								AS [login_name],
								ISNULL([host_name], '-')								AS [host_name],
								ISNULL(CONVERT(VARCHAR(20), [start_time], 120), '-')	AS [start_time],
								ISNULL([status], '-')									AS [status],
								ISNULL(CAST([session_id] AS VARCHAR), '-')				AS [session_id],
								ISNULL(CAST([blocking_session_id] AS VARCHAR), '-')		AS [blocking_session_id],
								ISNULL([wait_info], '-')								AS [Wait],
								ISNULL(CAST([open_tran_count] AS VARCHAR), '-')			AS [open_tran_count],
								ISNULL([CPU], '-')										AS [CPU],
								ISNULL([reads], '-')									AS [reads],
								ISNULL([writes], '-')									AS [writes],
								ISNULL(SUBSTRING([sql_command], 1, 300), '-')			AS [sql_command]
						FROM #WhoIsActive_Result
				
					  ) AS D ORDER BY [start_time] 
				FOR XML PATH( 'tr' ), TYPE) AS VARCHAR(MAX)
			) 
			      
			-- Corrige a Formatação da Tabela
			SET @WhoisactiveResultTable = REPLACE( REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>'), '<td>', '<td align = center>')
			
			-- Títulos da Tabela do EMAIL
			SET @WhoisactiveResultTable = 
					'<table cellspacing="2" cellpadding="5" border="3">'    
					+	'<tr>
							<th bgcolor=#0B0B61 width="140"><font color=white>[dd hh:mm:ss.mss]</font></th>
							<th bgcolor=#0B0B61 width="100"><font color=white>Database</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Login</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Host Name</font></th>
							<th bgcolor=#0B0B61 width="200"><font color=white>Start Time</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Status</font></th>
							<th bgcolor=#0B0B61 width="30"><font color=white>Session ID</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Blocking Session ID</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Wait</font></th>
							<th bgcolor=#0B0B61 width="60"><font color=white>Open Transaction</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>CPU</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Reads</font></th>
							<th bgcolor=#0B0B61 width="120"><font color=white>Writes</font></th>
							<th bgcolor=#0B0B61 width="1000"><font color=white>Query</font></th>
						</tr>'    
					+ REPLACE( REPLACE( @WhoisactiveResultTable, '&lt;', '<'), '&gt;', '>')   
					+ '</table>'
			
			--------------------------------------------------------------------------------------------------------------------------------
			-- Insere um Espaço em Branco no EMAIL
			--------------------------------------------------------------------------------------------------------------------------------
			SET @EmptyBodyEmail =	''
			SET @EmptyBodyEmail =
					'<table cellpadding="5" cellspacing="5" border="0">' +
						'<tr>
							<th width="500">               </th>
						</tr>'
						+ REPLACE( REPLACE( ISNULL(@EmptyBodyEmail,''), '&lt;', '<'), '&gt;', '>')
					+ '</table>'
			
			/*******************************************************************************************************************************
			--	Seta as Variáveis do EMAIL
			*******************************************************************************************************************************/
			SELECT	@Importance =	'High',
					@Subject =		'CLEAR: There are no transaction log files with more than ' +  CAST((@Log_Full_Parameter) AS VARCHAR) + '% of utilization in the Server: ' + @@SERVERNAME,
					@EmailBody =	@AlertLogHeader + @EmptyBodyEmail + @AlertLogTable + @EmptyBodyEmail + 
									@WhoisactiveResultHeader + @EmptyBodyEmail + @WhoisactiveResultTable + @EmptyBodyEmail
									
			/*******************************************************************************************************************************
			-- Inclui uma imagem com link para o site do Fabricio Lima
			*******************************************************************************************************************************/
		select @EmailBody = @EmailBody + '<br/><br/>' +
					'<a href="http://www.sqlsaturday.com" target=_blank> 
						<img	src="http://www.sqlsaturday.com/Portals/_default/Skins/SQLSaturday-2014/images/sqlsaturday-logo.png"
								height="80" width="300"/>
					</a>'
						
			/*******************************************************************************************************************************
			--	ALERTA - ENVIA O EMAIL
			*******************************************************************************************************************************/	
			EXEC [msdb].[dbo].[sp_send_dbmail]
					@profile_name = @ProfileEmail,
					@recipients =	@EmailDestination,
					@subject =		@Subject,
					@body =			@EmailBody,
					@body_format =	'HTML',
					@importance =	@Importance
						
			/*******************************************************************************************************************************
			-- Insert a new record in the alerts table-> Type = 0 : CLEAR
			*******************************************************************************************************************************/
			INSERT INTO [dbo].[Alerts] ( Id_Alert_Parameter, Alert_Message, [type])
			SELECT @Id_Alert_Parameter, @Subject, 0		
		END
	END		-- FIM - CLEAR
END
